<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Smith Chart using Matlab</title>
      <link href="/zsh.github.io/2020/08/09/smithchart/"/>
      <url>/zsh.github.io/2020/08/09/smithchart/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.matrixlab-examples.com/smith-chart.html">Smith Chart using Matlab</a></p><blockquote><h1 id="Smith-Chart-–-plots-with-Matlab"><a href="#Smith-Chart-–-plots-with-Matlab" class="headerlink" title="Smith Chart – plots with Matlab"></a>Smith Chart – plots with Matlab</h1><p><a href="http://www.matrixlab-examples.com/smith-chart.html#1_intro">1.- Aid for RF problems</a>  </p><p><a href="http://www.matrixlab-examples.com/smith-chart.html#2_reflection">2.- Calculate Reflection Coefficient, VSWR and Return loss</a>  </p><p><a href="http://www.matrixlab-examples.com/smith-chart.html#3_video">3.- Video: alternative code to draw the chart</a>  </p><h3 id="1-Useful-for-visualization-of-radio-frequency-and-transmission-line-problems"><a href="#1-Useful-for-visualization-of-radio-frequency-and-transmission-line-problems" class="headerlink" title="1.- Useful for visualization of radio frequency  and transmission line problems"></a>1.- Useful for visualization of radio frequency  and transmission line problems</h3><p>The Smith chart was created by Phillip H. Smith in 1939. It’s a graphical tool designed for electrical engineers specializing in radio frequency (RF) to solve problems related to transmission lines and matching circuits.<br> <br>Use of the Smith chart has grown over the years and it’s still used today, not only as a problem solving tool, but as a graphical display to show how RF parameters behave at one or more frequencies.   </p><p>(adsbygoogle=window.adsbygoogle||[]).push({});  </p><p> <br>The Smith chart can be used to represent many parameters including impedances, admittances, reflection and transmission coefficients, scattering parameters… </p><p>Normalized scaling allows the Smith chart to be used for problems involving any characteristic or system impedance which is represented by the center point of the chart. The most commonly used normalization impedance is 50 ohms. Once an answer is obtained through the graphical method, it is easy to convert between the normalized impedance and the corresponding unnormalized value by multiplying by the characteristic impedance. Reflection coefficients can be read directly from the chart. </p><p>Use of the Smith chart and the meaning of the results obtained requires a good understanding of AC circuits and transmission line theory, both of which are needed by RF engineers. </p><p>In the chart, there are horizontal circles that represent constant resistances; vertical circles represent constant reactances. The complex impedance (or admittance )is normalized using a reference, which usually is the characteristic impedance Z0. </p><p>The chart is part of current CAD tools and modern measurement equipments. It’s a graphic of the reflection coefficient in polar coordinates.  </p><p>Let’s create a chart with Matlab. </p><pre><code>function draw\_smith\_chart % Draw outer circle  t = linspace(0, 2\*pi, 100);  x = cos(t);  y = sin(t);  plot(x, y, &#39;linewidth&#39;, 3); axis equal; % Place title and remove ticks from axes  title(&#39; Smith Chart &#39;)  set(gca,&#39;xticklabel&#39;,&amp;#123;\[\]&amp;#125;);  set(gca,&#39;yticklabel&#39;,&amp;#123;\[\]&amp;#125;);  hold on % Draw circles along horizontal axis  k = \[.25 .5 .75\];  for i = 1 : length(k)   x(i,:) = k(i) + (1 - k(i)) \* cos(t);   y(i,:) = (1 - k(i)) \* sin(t);   plot(x(i,:), y(i,:), &#39;k&#39;)  end % Draw partial circles along vertical axis  kt = \[2.5 pi 3.79 4.22\];  k = \[.5 1 2 4\];  for i = 1 : length(kt)   t = linspace(kt(i), 1.5\*pi, 50);   a(i,:) = 1 + k(i) \* cos(t);   b(i,:) = k(i) + k(i) \* sin(t);   plot(a(i,:), b(i,:),&#39;k:&#39;, a(i,:), -b(i,:),&#39;k:&#39; )  end  </code></pre><h3 id="2-Calculate-the-Reflection-Coefficient-VSWR-and-Return-Loss"><a href="#2-Calculate-the-Reflection-Coefficient-VSWR-and-Return-Loss" class="headerlink" title="2.- Calculate the Reflection Coefficient, VSWR and Return Loss"></a>2.- Calculate the Reflection Coefficient, VSWR and Return Loss</h3><p>Now, let’s prepare some formulas to calculate typical values used in RF theory. To plot a reflection coefficient we need a normalized impedance with magnitude and angle. It’s a good idea to deliver the angle in degrees to make it easier to visualize, and also let’s calculate the Voltage Standing Wave Ratio (VSWR) and the return loss.</p><pre><code>function \[m, thd, SWR, rloss\] = smith\_ch\_calc(Z0, Zl) % Draw appropriate chart  draw\_smith\_chart % Normalize given impedance  zl = Zl/Z0; % Calculate reflection, magnitude and angle  g = (zl - 1)/(zl + 1);  m = abs(g);  th = angle(g); % Plot appropriate point  polar(th, m, &#39;r\*&#39;) % Change radians to degrees  thd = th \* 180/pi; % Calculate VSWR and return loss.  % We can add epsilon to magnitude, to avoid div by 0 or log(0)  SWR = (1 + m)/(1 - m + eps);  rloss = -20 \* log10(m + eps);</code></pre><p>  Now, let’s try our functions:</p><pre><code>clear, clc, close all, format compact  \[m1, d1, VSWR1, Rloss1\] = smith\_ch\_calc(50, 50)  \[m2, d2, VSWR2, Rloss2\] = smith\_ch\_calc(50, 100 + 50j)  \[m3, d3, VSWR3, Rloss3\] = smith\_ch\_calc(50, 30 - j\*47) </code></pre><p>and the results are:  </p><p> <img src="http://www.matrixlab-examples.com/image-files/xsmith-chart_001.gif.pagespeed.ic.io1ahoIhnA.png" alt="Smith Chart with Matlab"> </p><pre><code>m1 = 0  d1 = 0  VSWR1 = 1.0000  Rloss1 = 313.0712 m2 = 0.4472  d2 = 26.5651  VSWR2 = 2.6180  Rloss2 = 6.9897 m3 =     0.5505  d3 =   -82.6171  VSWR3 =  3.4494  Rloss3 = 5.1848 </code></pre><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>3.- Video: alternative code to draw the chart</p><p>This video shows an alternative code to draw the Smith Chart. You can pause the video to take appropriate notes…  </p><iframe width="560" height="315" src="https://www.youtube.com/embed/Y9RFAal6-zw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></blockquote><p><a href="http://www.matrixlab-examples.com/index.html">From ‘Smith Chart’ to home</a>  </p><p><a href="http://www.matrixlab-examples.com/matlab-plot-2tier.html">From ‘Smith Chart’ to ‘2D Graphics Menu’</a></p>]]></content>
      
      
      <categories>
          
          <category> 射频微波 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
            <tag> 史密斯圆图 </tag>
            
            <tag> Smith chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A simulation tool for superconducting circuits</title>
      <link href="/zsh.github.io/2020/08/09/superconduct/"/>
      <url>/zsh.github.io/2020/08/09/superconduct/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/adewes/superconductor">转载自github</a></p><h1 id="Superconductor"><a href="#Superconductor" class="headerlink" title="Superconductor"></a>Superconductor</h1><h2 id="A-simulation-tool-for-superconducting-circuits"><a href="#A-simulation-tool-for-superconducting-circuits" class="headerlink" title="A simulation tool for superconducting circuits."></a>A simulation tool for superconducting circuits.</h2><p>As a part of my diploma thesis (<a href="http://www.andreas-dewes.de/en/publications">http://www.andreas-dewes.de/en/publications</a>), I developed a simulation framework for the modeling and analysis of superconducting circuits. The main objective of this project was to develop a software package incorporating the following features:</p><pre><code>Simulation of arbitrary superconducting, electrical circuits containing both “classical” elements (e.g. resistors, capacitors) as well as superconducting components (e.g. Josephson junctions)Providing an open source alternative to other simulation packages available for the simulation of superconducting circuits (see e.g. [PSS91], [PSK+97] or [Whi91])Remedying the limitations of certain other simulation packages for circuit simulations (e.g. restriction of the maximum number of elements connected to a single node)</code></pre><h2 id="Building-It"><a href="#Building-It" class="headerlink" title="Building It"></a>Building It</h2><p>To build it under Windows, use the Visual Studio project file in the circuit directory.</p><p>To build it under Linux, simply use g++ (sorry for the code quality, this is from my Academic work :D):</p><pre><code>g++ -w *.cpp cline/sample.cpp -lpthread -DCIRCUIT_SIM=1 -o csim</code></pre><h2 id="Running-a-Simulation"><a href="#Running-a-Simulation" class="headerlink" title="Running a Simulation"></a>Running a Simulation</h2><p>To run a script, invoke the csim binary like this:</p><pre><code>csim -f scripts/dc_squid.ini</code></pre><p>This should start the simulation of a DC squid and store the results in a subfolder of the data directory (make sure that this exists). Make sure to install gnuplot if you want the plotting commands to perform properly.</p><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The software comes with a custom-built scripting language that allows the user to control all aspects of the circuit simulation and generation of data.</p><p>After describing the circuit topology using the scripting language, the software automatically generates a full spanning tree of the circuit and calculates a complete set of node and mesh equations for the circuit. The solution of this set of equations is done by using a modified biconjugate gradient descent method which linearizes the circuit around the current solution and calculates the state of it after a given time increment \Delta t to a chosen numerical precision. The main advantage of this method is that it requires only multiplication of sparse matrices (which can be implemented efficiently) and not the LU decomposition of the circuit matrix, which is computationally much more expensive.</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>The following script illustrates the generation of an IV curve for a superconducting DC SQUID circuit:</p><pre><code>CIRC_initialize();CIRC_STEPT=0.1;add_JJ(&quot;JJ_right&quot;,0,1,1.0,0.6);add_PS(&quot;Flux&quot;,0,2,0.0);add_JJ(&quot;JJ_left&quot;,2,3,1.0,2.1);add_L(&quot;L_right&quot;,1,4,1*1.56);add_L(&quot;L_left&quot;,3,4,1*1.56);add_R(&quot;R&quot;,4,5,0.01);add_CS(&quot;current&quot;,5,0,2.0);CIRC_build_trees();t=new_buffer();graph(t);set_flush(t,0);IVAMP=4.6;ICSTEPS=100;ICAMP=PI*2.0;INTT=800.0;for(x=1.9516;x&lt;=2.6;x=x+0.05)&amp;#123;  current_I=x;  IV(&quot;JJ_left&quot;,&quot;Flux&quot;,t);&amp;#125;</code></pre><h2 id="Terms-of-Usage"><a href="#Terms-of-Usage" class="headerlink" title="Terms of Usage"></a>Terms of Usage</h2><p>The code (except the numerical recipes snippets that were used and the Lua interface library code) can be freely reused. Feel free to include a reference to this code if you reuse it in your own project.<br>Further Reading</p><p>For more details on the simulation software, please check out my MSc thesis in Physics at <a href="http://www.andreas-dewes.de/en/publications/">http://www.andreas-dewes.de/en/publications/</a></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><pre><code>[PSS91] S. Polonsky, V. Semenov, and P. Shevchenko. Pscan: personal superconductor circuit analyser. Supercond. Sci. Technol., 4:667–670, 1991.[PSK+97] S. Polonsky, S. Shevchenko, P. Kirichenko, et al. Pscan’96: new software for simulation and optimization of complex rsfq circuits. IEEE Trans. Appl. Supercond., 7(2):2685–2689, 1997.[Whi91] S. Whitely. Josephson junctions in spice3. IEEE Trans. on Magn., 27(2):2902–2905, 1991.</code></pre>]]></content>
      
      
      <categories>
          
          <category> 超导 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 超导 </tag>
            
            <tag> superconducting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fawkes</title>
      <link href="/zsh.github.io/2020/08/09/fawkes/"/>
      <url>/zsh.github.io/2020/08/09/fawkes/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/zsh2020/fawkes">zsh2020/fawkes: Fawkes, privacy preserving tool against facial recognition systems. More info at https://sandlab.cs.uchicago.edu/fawkes</a></p><blockquote><h2 id="Fawkes"><a href="#Fawkes" class="headerlink" title="Fawkes"></a>Fawkes</h2><p>Fawkes is a privacy protection system developed by researchers at <a href="https://sandlab.cs.uchicago.edu/">SANDLab</a>, University of Chicago. For more information about the project, please refer to our project <a href="https://sandlab.cs.uchicago.edu/fawkes/">webpage</a>. Contact us at <a href="mailto:fawkes-team@googlegroups.com">fawkes-team@googlegroups.com</a>.</p><p>We published an academic paper to summarize our work “<a href="https://www.shawnshan.com/files/publication/fawkes.pdf">Fawkes: Protecting Personal Privacy against Unauthorized Deep Learning Models</a>“ at <em>USENIX Security 2020</em>.</p><p>NEW! If you would like to use Fawkes to protect your identity, please check out our software and binary implementation on the <a href="https://sandlab.cs.uchicago.edu/fawkes/#code">website</a>.</p><h2 id="Copyright"><a href="#Copyright" class="headerlink" title="Copyright"></a>Copyright</h2><p>This code is intended only for personal privacy protection or academic research.</p><p>We are currently exploring the filing of a provisional patent on the Fawkes algorithm.</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p><code>$ fawkes</code></p><p>Options:</p><ul><li><code>-m</code>, <code>--mode</code> : the tradeoff between privacy and perturbation size. Select from <code>min</code>, <code>low</code>, <code>mid</code>, <code>high</code>. The higher the mode is, the more perturbation will add to the image and provide stronger protection.</li><li><code>-d</code>, <code>--directory</code> : the directory with images to run protection.</li><li><code>-g</code>, <code>--gpu</code> : the GPU id when using GPU for optimization.</li><li><code>--batch-size</code> : number of images to run optimization together. Change to &gt;1 only if you have extremely powerful compute power.</li><li><code>--format</code> : format of the output image (png or jpg).</li></ul><p>when –mode is <code>custom</code>:</p><ul><li><code>--th</code> : perturbation threshold</li><li><code>--max-step</code> : number of optimization steps to run</li><li><code>--lr</code> : learning rate for the optimization</li><li><code>--feature-extractor</code> : name of the feature extractor to use</li><li><code>--separate_target</code> : whether select separate targets for each faces in the diectory.</li></ul><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p><code>fawkes -d ./imgs --mode min</code></p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul><li>The perturbation generation takes ~60 seconds per image on a CPU machine, and it would be much faster on a GPU machine. Use <code>batch-size=1</code> on CPU and <code>batch-size&gt;1</code> on GPUs.</li><li>Turn on separate target if the images in the directory belong to different people, otherwise, turn it off.</li><li>Run on GPU. The current Fawkes package and binary does not support GPU. To use GPU, you need to clone this, install the required packages in <code>setup.py</code>, and replace tensorflow with tensorflow-gpu. Then you can run Fawkes by <code>python3 fawkes/protection.py [args]</code>.</li></ul><p><a href="https://camo.githubusercontent.com/7fcf8a27a41cfbb59e228a18146cb41e384c04c3/687474703a2f2f73616e646c61622e63732e756368696361676f2e6564752f6661776b65732f66696c65732f6f62616d612e706e67"><img src="https://camo.githubusercontent.com/7fcf8a27a41cfbb59e228a18146cb41e384c04c3/687474703a2f2f73616e646c61622e63732e756368696361676f2e6564752f6661776b65732f66696c65732f6f62616d612e706e67"></a></p><h3 id="How-do-I-know-my-images-are-secure"><a href="#How-do-I-know-my-images-are-secure" class="headerlink" title="How do I know my images are secure?"></a>How do I know my images are secure?</h3><p>We are actively working on this. Python scripts that can test the protection effectiveness will be ready shortly.</p><h2 id="Quick-Installation"><a href="#Quick-Installation" class="headerlink" title="Quick Installation"></a>Quick Installation</h2><p>Install from <a href="https://pypi.org/project/fawkes/">PyPI</a>:</p><pre><code>pip install fawkes</code></pre><p>If you don’t have root privilege, please try to install on user namespace: <code>pip install --user fawkes</code>.</p><h2 id="Contribute-to-Fawkes"><a href="#Contribute-to-Fawkes" class="headerlink" title="Contribute to Fawkes"></a>Contribute to Fawkes</h2><p>If you would like to contribute to make Fawkes software better, please checkout our <a href="https://github.com/Shawn-Shan/fawkes/projects/1">project list</a> which contains our TODOs. If you are confident in helping, please open a pull requests and explain the plans for your changes. We will try our best to approve asap, and once approved, you can work on it.</p><h3 id="Citation"><a href="#Citation" class="headerlink" title="Citation"></a>Citation</h3><pre><code>@inproceedings&#123;shan2020fawkes,  title=&#123;Fawkes: Protecting Personal Privacy against Unauthorized Deep Learning Models&#125;,  author=&#123;Shan, Shawn and Wenger, Emily and Zhang, Jiayun and Li, Huiying and Zheng, Haitao and Zhao, Ben Y&#125;,  booktitle=&quot;Proc. of USENIX Security&quot;,  year=&#123;2020&#125;&#125;</code></pre><p><a href="https://github.com/Shawn-Shan/fawkes/blob/master/fawkes/README.md">fawkes/README.md at master · Shawn-Shan/fawkes</a></p></blockquote><blockquote><h1 id="Fawkes-Binary"><a href="#Fawkes-Binary" class="headerlink" title="Fawkes Binary"></a>Fawkes Binary</h1><p>This application is built for individuals to cloak their images before uploading to the Internet. For more information about the project, please refer to our project <a href="http://sandlab.cs.uchicago.edu/fawkes/">webpage</a>.</p><p>If you are a developer or researcher planning to customize and modify on our existing code. Please refer to <a href="https://github.com/Shawn-Shan/fawkes/tree/master/">fawkes</a>.</p><h3 id="How-to-Setup"><a href="#How-to-Setup" class="headerlink" title="How to Setup"></a>How to Setup</h3><h4 id="MAC"><a href="#MAC" class="headerlink" title="MAC:"></a>MAC:</h4><ul><li>Download the binary following this <a href="http://sandlab.cs.uchicago.edu/fawkes/files/fawkes_binary.zip">link</a> and unzip the download file.</li><li>Create a directory and move all the images you wish to protect into that directory. Note the path to that directory (e.g. ~/Desktop/images).</li><li>Open <a href="https://support.apple.com/guide/terminal/open-or-quit-terminal-apd5265185d-f365-44cb-8b09-71a064a42125/mac">terminal</a> and change directory to fawkes (the unzipped folder).</li><li>(If your MacOS is Catalina) Run <code>sudo spctl --master-disable</code> to enable running apps from unidentified developer. We are working on a solution to bypass this step.</li><li>Run <code>./protection-v0.3 -d IMAGE_DIR_PATH</code> to generate cloak for images in <code>IMAGE_DIR_PATH</code>.</li><li>When the cloaked image is generated, it will output a <code>*_min_cloaked.png</code> image in <code>IMAGE_DIR_PATH</code>. The generation takes ~40 seconds per image depending on the hardware.</li></ul><h4 id="PC"><a href="#PC" class="headerlink" title="PC:"></a>PC:</h4><ul><li>Download the binary following this <a href="http://sandlab.cs.uchicago.edu/fawkes/files/fawkes_binary_windows.zip">link</a> and unzip the download file.</li><li>Create a directory and move all the images you wish to protect into that directory. Note the path to that directory (e.g. ~/Desktop/images).</li><li>Open terminal(powershell or cmd) and change directory to protection (the unzipped folder).</li><li>Run <code>protection-v0.3.exe -d IMAGE_DIR_PATH</code> to generate cloak for images in <code>IMAGE_DIR_PATH</code>.</li><li>When the cloaked image is generated, it will output a <code>*_min_cloaked.png</code> image in <code>IMAGE_DIR_PATH</code>. The generation takes ~40 seconds per image depending on the hardware.</li></ul><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux:"></a>Linux:</h4><ul><li>Download the binary following this <a href="http://sandlab.cs.uchicago.edu/fawkes/files/fawkes_binary_linux.zip">link</a> and unzip the download file.</li><li>Create a directory and move all the images you wish to protect into that directory. Note the path to that directory (e.g. ~/Desktop/images).</li><li>Open terminal and change directory to protection (the unzipped folder).</li><li>Run <code>./protection-v0.3 -d IMAGE_DIR_PATH</code> to generate cloak for images in <code>IMAGE_DIR_PATH</code>.</li><li>When the cloaked image is generated, it will output a <code>*_min_cloaked.png</code> image in <code>IMAGE_DIR_PATH</code>. The generation takes ~40 seconds per image depending on the hardware.</li></ul><p>More details on the optional parameters check out the <a href="https://github.com/Shawn-Shan/fawkes/tree/master/">github repo</a>.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> fawkes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Science Plots</title>
      <link href="/zsh.github.io/2020/08/08/scienceplot/"/>
      <url>/zsh.github.io/2020/08/08/scienceplot/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/zsh2020/SciencePlots">SciencePlots: Matplotlib styles for scientific plotting</a></p><blockquote><h1 id="Science-Plots"><a href="#Science-Plots" class="headerlink" title="Science Plots"></a>Science Plots</h1><p><em>Matplotlib styles for scientific plotting</em></p><p>This repo has Matplotlib styles to format your plots for scientific papers, presentations and theses.</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig1.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig1.jpg"></a></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>The easiest way to install SciencePlots is using <code>pip</code>:</p><pre><code># for latest versionpip install git+https://github.com/garrettj403/SciencePlots.git# for last releasepip install SciencePlots</code></pre><p>The pip installation will automatically move all of the <code>*.mplstyle</code> files into the appropriate directory. You can also do this manually, if you like. First, clone the repository and then copy all of the <code>*.mplstyle</code> files into your Matplotlib style directory. If you’re not sure where this is, in an interactive python console type:</p><pre><code>import matplotlibprint(matplotlib.get\_configdir())</code></pre><p>You should get back something like <code>/home/garrett/.matplotlib</code>. You would then put the <code>*.mplstyle</code> files in <code>/home/garrett/.matplotlib/stylelib/</code> (you may need to create the <code>stylelib</code> directory).</p><h2 id="Using-the-Styles"><a href="#Using-the-Styles" class="headerlink" title="Using the Styles"></a>Using the Styles</h2><p><code>science.mplstyle</code> is the main style from this repo. Whenever you want to use it, simply add the following to the top of your python script:</p><pre><code>import matplotlib.pyplot as pltplt.style.use(&#39;science&#39;)</code></pre><p>You can also combine multiple styles together by:</p><pre><code>plt.style.use(\[&#39;science&#39;,&#39;ieee&#39;\])</code></pre><p>In this case, the <code>ieee</code> style will override some of the parameters from the main <code>science</code> style in order to configure the plot for IEEE papers (column width, fontsizes, etc.).</p><p>To use any of the styles temporarily, you can use:</p><pre><code>with plt.style.context(\[&#39;science&#39;, &#39;ieee&#39;\]):    plt.figure()    plt.plot(x, y)    plt.show()</code></pre><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>The <code>science</code> style (the base style):</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig1.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig1.jpg"></a></p><p>The <code>science</code> + <code>grid</code> styles:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig11.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig11.jpg"></a></p><p>The <code>science</code> + <code>ieee</code> styles for IEEE papers:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig2.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig2.jpg"></a></p><p>IEEE requires figures to be readable when printed in black and white. The <code>ieee</code> style also sets the figure width to fit within one column of an IEEE paper.</p><p>The <code>science</code> + <code>scatter</code> styles for scatter plots:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig3.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig3.jpg"></a></p><p>The <code>science</code> + <code>notebook</code> styles for Jupyter notebooks:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig10.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig10.jpg"></a></p><p>You can also combine these styles with the other styles that come with Matplotlib. For example, the <code>dark_background</code> + <code>science</code> + <code>high-vis</code> styles:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig5.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig5.jpg"></a></p><p><strong>Note:</strong> See the <code>examples/</code> directory for more!</p><h2 id="Color-Cycles"><a href="#Color-Cycles" class="headerlink" title="Color Cycles"></a>Color Cycles</h2><p>The <code>high-vis</code> color cycle:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig4.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig4.jpg"></a></p><p>The <code>bright</code> color cycle:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig6.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig6.jpg"></a></p><p>The <code>vibrant</code> color cycle:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig7.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig7.jpg"></a></p><p>The <code>muted</code> color cycle:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig8.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig8.jpg"></a></p><p>The <code>retro</code> color cycle:</p><p><a href="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig9.jpg"><img src="https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig9.jpg"></a></p><p><strong>Note:</strong> The <code>bright</code>, <code>vibrant</code> and <code>muted</code> color cycles are from <a href="https://personal.sron.nl/~pault/">Paul Tol’s website</a>. <strong>They are color-blind safe!</strong></p><h2 id="Contribution"><a href="#Contribution" class="headerlink" title="Contribution"></a>Contribution</h2><p>Please feel free to add to this repo! For example, it would be good to add styles for different journals or perhaps new color cycles.</p><p>You can checkout <a href="https://matplotlib.org/tutorials/introductory/customizing.html">Matplotlib’s documentation</a> for more plotting options.</p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol><li><p>Errors related to Latex:</p><ul><li>The default <code>science</code> style uses Latex font rendering. If you do not have Latex on your computer or if you think that Latex takes too long, you can disable Latex using the <code>no-latex</code> style:<pre><code>plt.style.use(\[&#39;science&#39;,&#39;no-latex&#39;\])</code></pre></li><li>For Windows users, you may need to manually add Latex to your environment path (<a href="https://github.com/garrettj403/SciencePlots/issues/9">see issue</a>).</li></ul></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图说滤波电容的使用心得</title>
      <link href="/zsh.github.io/2020/08/08/cap/"/>
      <url>/zsh.github.io/2020/08/08/cap/</url>
      
        <content type="html"><![CDATA[<p><a href="http://murata.eetrend.com/node/1001570">图说滤波电容的使用心得 | 村田中文技术社区</a></p><blockquote><h1 id="图说滤波电容的使用心得"><a href="#图说滤波电容的使用心得" class="headerlink" title="图说滤波电容的使用心得"></a>图说滤波电容的使用心得</h1><p><a href="http://murata.eetrend.com/node/1001570#"></a></p><p><a href="http://murata.eetrend.com/node/1001570#"></a></p></blockquote><p><a href="http://murata.eetrend.com/tags/lubodianrong">滤波电容</a></p><blockquote></blockquote><blockquote><p><img src="http://murata.eetrend.com/sites/default/files/2018-05/dianqi.jpg">  </p><p>简单的电感电路在低阻抗电路中使用时效果很好，衰减超过40dB，但在高阻抗电路中可能一点效果没有。</p><p>单个电容器的电路在高阻抗电路中效果很好，但在低阻抗电路中效果很差。</p><p>多元件构成的滤波器会有很好的效果，但前提是必须构造正确，应使电容器面对高阻抗，电感器面对低阻抗。</p><p>由于电容器引线具有寄生电感，电阻，实际电容器模型是电容，电感(等效串联电感ESL)，电阻(等效串联电阻ESR)串联的结构，具有自谐振频率，电容器应该工作在其自谐振频率之下才能发挥作用。</p><p>表一： 引线长1.6mm的陶瓷电容器<br><img src="https://i.loli.net/2020/08/08/PKutaV4eRMQUsFO.jpg" alt="表一"></p><p>由此可见，一般电容器的谐振频率很低，不能应用在高频，微波频段。为了提高谐振频率，可以采用表面贴装电容器，三端口电容器和穿心电容等。</p><p>三端电容器：</p><p><img src="http://murata.eetrend.com/sites/default/files/inline-images/%E5%9B%BE1%EF%BC%9A%E4%B8%89%E7%AB%AF%E7%94%B5%E5%AE%B9%E5%99%A8.png" alt="三端电容器"><img src="http://murata.eetrend.com/sites/default/files/inline-images/%E5%9B%BE2%EF%BC%9A%E4%B8%89%E7%AB%AF%E7%94%B5%E5%AE%B9%E5%99%A82.png" alt="图2：三端电容器2"></p><p>三端电容的安装：</p><p>接地端尽量短，减少接地端的引线电感。</p><p><img src="http://murata.eetrend.com/sites/default/files/inline-images/%E5%9B%BE3%EF%BC%9A%E4%B8%89%E7%AB%AF%E7%94%B5%E5%AE%B9%E7%9A%84%E5%AE%89%E8%A3%85.png" alt="三端电容的安装"></p><p>三端电容器的不足：</p><p><img src="http://murata.eetrend.com/sites/default/files/inline-images/%E5%9B%BE4%EF%BC%9A%E4%B8%89%E7%AB%AF%E7%94%B5%E5%AE%B9%E5%99%A8%E7%9A%84%E4%B8%8D%E8%B6%B3.png" alt="三端电容器的不足"></p><p>穿心电容：</p><p>由于其接地端与地可以紧密接触，引线电感更小，因此性能更优越，以穿心电容为基础的馈通滤波器广泛应用于RF滤波。</p><p><img src="http://murata.eetrend.com/sites/default/files/inline-images/%E5%9B%BE5%EF%BC%9A%E7%A9%BF%E5%BF%83%E7%94%B5%E5%AE%B9.png" alt="穿心电容"></p><p>穿心电容输入输出端连线穿过上下两块接地板(故名穿心电容)，相当于上下两个电容并联成一个总电容。由于其接地部分与电路中的地360°连接，所以接地电感很小。</p><p>另外温度和电压对电容值也有很大的影响。</p><p><img src="http://murata.eetrend.com/sites/default/files/inline-images/%E5%9B%BE6%EF%BC%9A%E6%B8%A9%E5%BA%A6%E5%92%8C%E7%94%B5%E5%8E%8B%E5%AF%B9%E7%94%B5%E5%AE%B9%E5%80%BC%E4%B9%9F%E6%9C%89%E5%BE%88%E5%A4%A7%E7%9A%84%E5%BD%B1%E5%93%8D.png" alt="温度和电压对电容值"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 射频微波 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 射频微波 </tag>
            
            <tag> 滤波电容 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校园网网关不自动弹出的解决方案</title>
      <link href="/zsh.github.io/2020/08/08/net/"/>
      <url>/zsh.github.io/2020/08/08/net/</url>
      
        <content type="html"><![CDATA[<p>其实解决方法很简单，如果你的浏览器不弹出网关登录界面，手动输入以下IP地址，然后选择对应校区的认证页面在登录就可以了，是不是很简单。</p><pre><code>202.113.18.110</code></pre>]]></content>
      
      
      <categories>
          
          <category> 学校 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一文掌握：Matplotlib+Seaborn可视化</title>
      <link href="/zsh.github.io/2020/08/08/matplot/"/>
      <url>/zsh.github.io/2020/08/08/matplot/</url>
      
        <content type="html"><![CDATA[<h1 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h1><p>Seaborn和Matplotlib是Python最强大的两个可视化库。Seaborn其默认主题让人惊讶，而Matplotlib可以通过其多个分类为用户打造专属功能。</p><h2 id="1-导入包"><a href="#1-导入包" class="headerlink" title="1 导入包"></a>1 导入包</h2><pre><code>import matplotlib.pyplot as plt #导入绘图包import numpy as np #导入numpyimport pandas as pd #导入pandas</code></pre><h2 id="2-参数介绍"><a href="#2-参数介绍" class="headerlink" title="2 参数介绍"></a>2 参数介绍</h2><pre><code>Figure：面板(图)，matplotlib中的所有图像都是位于figure对象中，一个图像只能有一个figure对象。</code></pre><h2 id="3-点图、线图为例"><a href="#3-点图、线图为例" class="headerlink" title="3 点图、线图为例"></a>3 点图、线图为例</h2><pre><code>#使用numpy产生数据x=np.arange(-5,,0.1)y=x*#创建窗口、子图#方法1：先创建窗口，再创建子图。（一定绘制）fig = plt.figure(num=, figsize=(, ),dpi=)     #开启一个窗口，同时设置大小，分辨率ax1 = fig.add_subplot(,,)  #通过fig添加子图，参数：行数，列数，第几个。ax2 = fig.add_subplot(,,)  #通过fig添加子图，参数：行数，列数，第几个。print(fig,ax1,ax2)#方法2：一次性创建窗口和多个子图。（空白不绘制）fig,axarr = plt.subplots(,)  #开一个新窗口，并添加4个子图，返回子图数组ax1 = axarr[]    #通过子图数组获取一个子图print(fig,ax1)#方法3：一次性创建窗口和一个子图。（空白不绘制）ax1 = plt.subplot(,,,facecolor=&#39;white&#39;)      #开一个新窗口，创建1个子图。facecolor设置背景颜色print(ax1)#获取对窗口的引用，适用于上面三种方法# fig = plt.gcf()   #获得当前figure# fig=ax1.figure   #获得指定子图所属窗口# fig.subplots_adjust(left=0)                         #设置窗口左内边距为0，即左边留白为0。#设置子图的基本元素ax1.set_title(&#39;python-drawing&#39;)            #设置图体，plt.titleax1.set_xlabel(&#39;x-name&#39;)                    #设置x轴名称,plt.xlabelax1.set_ylabel(&#39;y-name&#39;)                    #设置y轴名称,plt.ylabelplt.axis([-6,,-10,])                  #设置横纵坐标轴范围，这个在子图中被分解为下面两个函数ax1.set_xlim(-5,)                           #设置横轴范围，会覆盖上面的横坐标,plt.xlimax1.set_ylim(-10,)                         #设置纵轴范围，会覆盖上面的纵坐标,plt.ylimxmajorLocator = MultipleLocator()   #定义横向主刻度标签的刻度差为2的倍数。就是隔几个刻度才显示一个标签文本ymajorLocator = MultipleLocator()   #定义纵向主刻度标签的刻度差为3的倍数。就是隔几个刻度才显示一个标签文本ax1.xaxis.set_major_locator(xmajorLocator) #x轴 应用定义的横向主刻度格式。如果不应用将采用默认刻度格式ax1.yaxis.set_major_locator(ymajorLocator) #y轴 应用定义的纵向主刻度格式。如果不应用将采用默认刻度格式ax1.xaxis.grid(True, which=&#39;major&#39;)      #x坐标轴的网格使用定义的主刻度格式ax1.yaxis.grid(True, which=&#39;major&#39;)      #x坐标轴的网格使用定义的主刻度格式ax1.set_xticks([])     #去除坐标轴刻度ax1.set_xticks((-5,-3,-1,,,))  #设置坐标轴刻度ax1.set_xticklabels(labels=[&#39;x1&#39;,&#39;x2&#39;,&#39;x3&#39;,&#39;x4&#39;,&#39;x5&#39;],rotation=-30,fontsize=&#39;small&#39;)  #设置刻度的显示文本，rotation旋转角度，fontsize字体大小plot1=ax1.plot(x,y,marker=&#39;o&#39;,color=&#39;g&#39;,label=&#39;legend1&#39;)   #点图：marker图标plot2=ax1.plot(x,y,linestyle=&#39;--&#39;,alpha=0.5,color=&#39;r&#39;,label=&#39;legend2&#39;)   #线图：linestyle线性，alpha透明度，color颜色，label图例文本ax1.legend(loc=&#39;upper left&#39;)            #显示图例,plt.legend()ax1.text(2.8, , r&#39;y=3*x&#39;)                #指定位置显示文字,plt.text()ax1.annotate(&#39;important point&#39;, xy=(, ), xytext=(, 1.5),  #添加标注，参数：注释文本、指向点、文字位置、箭头属性            arrowprops=dict(facecolor=&#39;black&#39;, shrink=0.05),            )#显示网格。which参数的值为major(只绘制大刻度)、minor(只绘制小刻度)、both，默认值为major。axis为&#39;x&#39;,&#39;y&#39;,&#39;both&#39;ax1.grid(b=True,which=&#39;major&#39;,axis=&#39;both&#39;,alpha= 0.5,color=&#39;skyblue&#39;,linestyle=&#39;--&#39;,linewidth=)axes1 = plt.axes([.2, .3, .1, .1], facecolor=&#39;y&#39;)       #在当前窗口添加一个子图，rect=[左, 下, 宽, 高]，是使用的绝对布局，不和以存在窗口挤占空间axes1.plot(x,y)  #在子图上画图plt.savefig(&#39;aa.jpg&#39;,dpi=,bbox_inches=&#39;tight&#39;)   #savefig保存图片，dpi分辨率，bbox_inches子图周边白色空间的大小plt.show()    #打开窗口，对于方法1创建在窗口一定绘制，对于方法2方法3创建的窗口，若坐标系全部空白，则不绘制</code></pre><h2 id="4-一个窗口多个图"><a href="#4-一个窗口多个图" class="headerlink" title="4 一个窗口多个图"></a>4 一个窗口多个图</h2><pre><code>#一个窗口，多个图，多条数据sub1=plt.subplot(,facecolor=(0.1843,0.3098,0.3098))  #将窗口分成2行1列，在第1个作图，并设置背景色sub2=plt.subplot()   #将窗口分成2行1列，在第2个作图sub1.plot(x,y)          #绘制子图sub2.plot(x,y)          #绘制子图axes1 = plt.axes([.2, .3, .1, .1], facecolor=&#39;y&#39;)  #添加一个子坐标系，rect=[左, 下, 宽, 高]plt.plot(x,y)           #绘制子坐标系，axes2 = plt.axes([0.7, .2, .1, .1], facecolor=&#39;y&#39;)  #添加一个子坐标系，rect=[左, 下, 宽, 高]plt.plot(x,y)plt.show()</code></pre><h2 id="5-柱形图"><a href="#5-柱形图" class="headerlink" title="5 柱形图"></a>5 柱形图</h2><pre><code>plt.figure()x_index = np.arange()   #柱的索引x_data = (&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;)y1_data = (, , , , )y2_data = (, , , , )bar_width = 0.35   #定义一个数字代表每个独立柱的宽度rects1 = plt.bar(x_index, y1_data, width=bar_width,alpha=0.4, color=&#39;b&#39;,label=&#39;legend1&#39;)            #参数：左偏移、高度、柱宽、透明度、颜色、图例rects2 = plt.bar(x_index + bar_width, y2_data, width=bar_width,alpha=0.5,color=&#39;r&#39;,label=&#39;legend2&#39;) #参数：左偏移、高度、柱宽、透明度、颜色、图例#关于左偏移，不用关心每根柱的中心不中心，因为只要把刻度线设置在柱的中间就可以了plt.xticks(x_index + bar_width/, x_data)   #x轴刻度线plt.legend()    #显示图例plt.tight_layout()  #自动控制图像外部边缘，此方法不能够很好的控制图像间的间隔plt.show()</code></pre><p><img src="https://ask.qcloudimg.com/http-save/yehe-4228586/c6x7jju7an.jpeg?imageView2/2/w/1620"></p><h2 id="6-直方图"><a href="#6-直方图" class="headerlink" title="6 直方图"></a>6 直方图</h2><pre><code>fig,(ax0,ax1) = plt.subplots(nrows=,figsize=(,))     #在窗口上添加2个子图sigma =    #标准差mean =     #均值x=mean+sigma*np.random.randn()   #正态分布随机数ax0.hist(x,bins=,normed=False,histtype=&#39;bar&#39;,facecolor=&#39;yellowgreen&#39;,alpha=0.75)   #normed是否归一化，histtype直方图类型，facecolor颜色，alpha透明度ax1.hist(x,bins=,normed=,histtype=&#39;bar&#39;,facecolor=&#39;pink&#39;,alpha=0.75,cumulative=True,rwidth=0.8) #bins柱子的个数,cumulative是否计算累加分布，rwidth柱子宽度plt.show()  #所有窗口运行</code></pre><p><img src="https://ask.qcloudimg.com/http-save/yehe-4228586/gbmda8b7qm.jpeg?imageView2/2/w/1620"></p><h2 id="7-散点图"><a href="#7-散点图" class="headerlink" title="7 散点图"></a>7 散点图</h2><pre><code>fig = plt.figure()          #添加一个窗口ax =fig.add_subplot(,,)   #在窗口上添加一个子图x=np.random.random()      #产生随机数组y=np.random.random()      #产生随机数组ax.scatter(x,y,s=x*,c=&#39;y&#39;,marker=(,),alpha=0.5,lw=,facecolors=&#39;none&#39;)  #x横坐标，y纵坐标，s图像大小，c颜色，marker图片，lw图像边框宽度plt.show()  #所有窗口运行</code></pre><p><img src="https://ask.qcloudimg.com/http-save/yehe-4228586/h3kw4kmywh.jpeg?imageView2/2/w/1620"></p><h2 id="8-导入Seaborn"><a href="#8-导入Seaborn" class="headerlink" title="8 导入Seaborn"></a>8 导入Seaborn</h2><pre><code>import seaborn as sns</code></pre><h2 id="9-直方图barplot"><a href="#9-直方图barplot" class="headerlink" title="9 直方图barplot"></a>9 直方图barplot</h2><pre><code>x = np.arange()y = np.array([,,,,,,,])df = pd.DataFrame(&amp;#123;&quot;x-axis&quot;: x,&quot;y-axis&quot;: y&amp;#125;)sns.barplot(&quot;x-axis&quot;,&quot;y-axis&quot;,palette=&quot;RdBu_r&quot;,data=df)plt.xticks(rotation=)plt.show()</code></pre><p><img src="https://ask.qcloudimg.com/http-save/yehe-4228586/vn2rt79vtc.png?imageView2/2/w/1620"></p><h2 id="10-相关热力图"><a href="#10-相关热力图" class="headerlink" title="10 相关热力图"></a>10 相关热力图</h2><p>以tips数据为例：</p><pre><code># 相关性热力图sns.heatmap(tips.corr())</code></pre><p><img src="https://ask.qcloudimg.com/http-save/yehe-4228586/3uy0iv5gep.png?imageView2/2/w/1620"></p><pre><code>#看图说话：热力图可用来显示两变量之间的相关性，在这里两变量间对应的矩形框的颜色越浅，代表两者之间越具有相关性</code></pre><h2 id="11-核密度估计图"><a href="#11-核密度估计图" class="headerlink" title="11 核密度估计图"></a>11 核密度估计图</h2><pre><code>#kde plot图sns.kdeplot(tips[&#39;total_bill&#39;], shade=True)</code></pre><p><img src="https://ask.qcloudimg.com/http-save/yehe-4228586/pq5jjjlvkh.png?imageView2/2/w/1620"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Matplotlib </tag>
            
            <tag> Seaborn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派打造魔镜系统的完全教程</title>
      <link href="/zsh.github.io/2020/08/08/raspberri%20pi1/"/>
      <url>/zsh.github.io/2020/08/08/raspberri%20pi1/</url>
      
        <content type="html"><![CDATA[<h2 id="Complete-Setup-Tutorial"><a href="#Complete-Setup-Tutorial" class="headerlink" title="Complete Setup Tutorial"></a>Complete Setup Tutorial</h2><p>KirAsh4Moderator<br>about a year ago</p><p>What will follow this post will be a series of steps to go from taking a brand new raspberry Pi 3 out of the box to having MagicMirror² up and running. I will try to keep things in order but that’s no guarantee. I will however link each post back into this one in the correct order, so you’d be able to just click on the link and jump straight to that specific post.<br>The Raspberri Pi setup is as follows:</p><pre><code>Note: I have no affiliation with the listed vendors. I list them because that’s where I got the parts from. You can buy them wherever you buy your daily dose of electronics.    Raspberry Pi 3 - Model B - ARMv8 with 1GB of RAM (Adafruit)    5V/2.4A Power supply (Adafruit)    8GB Sandisk Ultra Class 10 MicroSDHC card (Amazon)    ASUS ProArt PA248Q Monitor (Amazon)    Belkin 6’ HDMI Cable (Amazon)    Mini 2.4G Wireless Keyboard &amp; Mouse Combo (eBay)Notes:    The Raspberry Pi 3 needs a hefty power supply to run. You don’t need a 2.4Amp one, but I wouldn’t go below 2Amps.    You want a high speed SD card. Since the entire OS runs off of it, get a fast one. eLunix.org has a comprehensive list of what’s tested and works. You can find the list here.    Monitor and choice of cable is obviously up to you.</code></pre><p>I use a mini keyboard for any/all of my projects that require a temporary solution. Even those that need a permanent one. They’re smaller than a regular sized one. And this one in particular is also rather thin. And I like that they are wireless. it cuts down on the cords needed to be connected to the device itself. These ones have a miniature USB dongle. Again, personal choice.<br>I will be running this wirelessly and will make a note of it again in the setup part.<br>I will be using my Windows 10 system for the initial setup of the card containing the operating system. What you use is up to you, however keep in mind that any screen captures I take and any software I use during this process will be from a Windows 10 platform.<br>DO NOT INSTALL MagicMirror² as the root user! Always do it as the regular, non privileged pi user and learn to use the sudo command instead. “But why?”, you ask, “… if it’s in my house, and on my network, and not on the internet.” That’s all fine, however we don’t control every possible module that others contribute and someone, or something, could expose your Raspberry Pi, or your entire network to the outside world. Just don’t do it.<br>This entire tutorial is based on you having physical access to the Raspberry Pi. After all, you will need that to set it up, but even at the end, installing MagicMirror², it is assumed you are doing that directly on the Raspberry Pi, and not through a remote SSH login.</p><pre><code>Section 1: Preparing the SD card with the operating systemSection 2: Booting up the Raspberry Pi and configuring itSection 3: Configuring wireless networkingSection 4: Cleaning up and updating the operating systemSection 5: Installing MagicMirror² &amp; Configuring Raspberry Pi for MagicMirror²Section #: … beer?</code></pre><p>A Life? Cool! Where can I download one of those from?</p><p>KirAsh4Moderator<br>about a year ago</p><h2 id="Preparing-the-SD-card"><a href="#Preparing-the-SD-card" class="headerlink" title="Preparing the SD card"></a>Preparing the SD card</h2><p>This may seem dumb but if not done properly, you may end up with a card showing you less available storage than it actually has on it. Specially if you are trying to redo it because you made a mistake and have to start over.</p><h2 id="Required-tools"><a href="#Required-tools" class="headerlink" title="Required tools:"></a>Required tools:</h2><p>(I will leave the installing of these as an exercise to the user. I’m not going to cover that here.)<br>7-Zip: <a href="http://www.7-zip.org/">http://www.7-zip.org/</a> (because Window’s builtin Zip facility is extremely slow)<br>SD Card Formatter: <a href="https://www.sdcard.org/downloads/formatter_4/">https://www.sdcard.org/downloads/formatter_4/</a><br>Win32 Disk Imager: <a href="https://sourceforge.net/projects/win32diskimager/">https://sourceforge.net/projects/win32diskimager/</a></p><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>Download the operating system from the Raspberry Pi Foundation web site:<br><a href="https://www.raspberrypi.org/downloads/raspbian/">https://www.raspberrypi.org/downloads/raspbian/</a><br>As of this writing, the most recent version is Jessie, released May 27th, 2016. You want to pick the full Jessie image.</p><p>0_1465929096957_001-rpi-jessie.png</p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>Once you’ve downloaded the file, find it in whatever location you saved it and right click on it. On the context menu, pick 7-zip -&gt; Extract Here.</p><p>0_1465929311483_002-7zip-extract-01.png</p><p>0_1465929378631_003-7zip-extract-02.png</p><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>While the file is extracting, you can start preparing the SD card itself. Pop it into your reader and open SDFormatter. Make sure the drive letter is the correct one. The Volume Label doesn’t matter since it will get overwritten anyway. (In the screen capture, you can see the Size at 60MB. That’s because I had previously used this card on a Raspberry Pi, and since Windows can’t read that partition, it only lists 60MB. In order to fix that, you must perform the following steps!)</p><p>0_1465929557548_004-sdformatter-01.png</p><p>Click on Option and select FULL (erase) as the FORMAT TYPE</p><p>0_1465929605540_005-sdformatter-02.png</p><p>Under FORMAT SIZE ADJUSTMENT, pick ON</p><p>0_1465929658015_006-sdformatter-03.png</p><p>Next click on the Format button and wait a few seconds. You may get an error about something being unsupported, that’s fine, you can ignore it. If all went well, at the end of the format, the screen will look like this:</p><p>0_1465929733082_007-sdformatter-04.png</p><p>Notice the Size, it should list the approximate size of the card, in this case it’s an 8GB card, so that number is correct.)</p><h3 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h3><p>Now it’s time to write the operating system image onto the card. It should be done extracting by now and you should have an .img file now. For the May 27th release, the file name is 2016-05-27-raspbian-jessie.img. For this step, you’re going to use the Win32 Disk Imager software. It must be run as the Administrator user, otherwise it will fail.</p><p>Click on Start, find the program in your menu, right-click on the name of it and select Run as Administrator. On my Windows 10 system, the menu looks like this:</p><p>0_1465930048110_008-imagewriter-01.png</p><p>When the program launches, click on the tiny folder icon to the right of the empty field, then browse to where your Raspbian Jessie image is located and select it. Again, verify the drive letter to the right of that! While the program will only pick external drives, if you happen to have something else in your reader, it will happily list it and possibly write to it if you don’t check that.</p><p>0_1465930234990_009-imagewriter-02.png</p><p>Once you’ve checked the correct drive, click on Write and wait for it to finish.</p><p>0_1465930287990_010-imagewriter-03.png</p><p>0_1465930292479_011-imagewriter-04.png</p><p>0_1465930296328_012-imagewriter-05.png</p><p>Once completed, Eject the card. I know that sounds silly, but I know way too many people who don’t know to Eject any cards or USB thumbdrives.They simply yank them out. There’s only a small number of brands on the market that will be fine if you yank them out, however the majority should be ejected first. That will signal any latent process to finish writing to the card or drive before unmounting it from the operating system. You are now ready to insert the card into your Raspberry Pi and boot it up for the first time.</p><p>A Life? Cool! Where can I download one of those from?<br>0<br>KirAsh4Moderator<br>about a year ago</p><h2 id="Booting-up-the-Raspberry-Pi-and-configuring-it"><a href="#Booting-up-the-Raspberry-Pi-and-configuring-it" class="headerlink" title="Booting up the Raspberry Pi and configuring it"></a>Booting up the Raspberry Pi and configuring it</h2><p>Now that we have the operating system on the card, we’re ready to boot up the Raspberry Pi (rpi). Put the card into the slot on the bottom of the rpi, plug in your monitor cable, turn the monitor on. Whether you are using a wired or wireless keyboard and mouse, make sure those are plugged in, then plug in power to the rpi itself.</p><p>The first boot up takes a bit longer than usual because it’s reconfiguring itself and setting all the defaults. If all went well, it should boot straight into the graphical interface. I apologize but I forgot to take a screen capture of this, but in the upper menu, click on the Terminal icon. It looks like a black monitor. This opens up a black terminal window, logged in as the pi user.</p><p>We are now going to run through the basic configuration of the rpi itself. This will result in a rather long post with lost of screen captures. You’ve been warned. :)</p><h3 id="Step-1-1"><a href="#Step-1-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>In the terminal window, type in sudo raspi-config and hit return/enter. This will launch the Raspberry Pi Software Configuration Tool. (Navigation is done with the arrow keys, the TAB key allows you to jump from the selection menu to the buttons on the bottom, and the space bar is used to select or un-select menu items.)</p><p>0_1465931806571_001-raspiconfig.png</p><p>The first item, Expand Filesystem is already highlighted for you, so just hit enter/return on that. This will instruct the rpi to resize the partition to use the full size of the card.</p><p>0_1465931869981_002-raspiconfig.png</p><p>You do not need to immediately reboot, so let’s move on.</p><h3 id="Step-2-1"><a href="#Step-2-1" class="headerlink" title="Step 2"></a>Step 2</h3><p>Now we’re going to configure the Internationalisation Options. This will configure your rpi to use the correct language, timezone, and others. Select that option (5) and hit enter/return.</p><p>0_1465931969915_003-raspiconfig.png</p><p>Select the first option, Change Locale (I1)</p><p>0_1465932007733_004-raspiconfig.png</p><p>Now scroll to your preferred language using the up/down arrow keys. In my case, I’ll be using US English as opposed to the default GB English. Press your space bar to select your preferred language, and don’t forget to un-select the default. one. And I specifically picked the UTF version because it supports any Unicode character. ISO-8859-1 only supports the first 256 characters.</p><p>0_1465932196146_005-raspiconfig.png</p><p>0_1465932208265_006-raspiconfig.png</p><p>Once you complete that step, you’re back at the main menu. Select the Internationalisation Options again, and go to the second option, Change Timezone (I2)</p><p>0_1465932259726_007-raspiconfig.png</p><p>Start by picking your region, then the respective timezone that you’re in. In my case, I’m in the US, living in the Mountain timezone</p><p>0_1465932328231_008-raspiconfig.png</p><p>0_1465932339295_009-raspiconfig.png</p><p>Once again, when you finish that, it takes you back to the main menu. Get back to the Internationalisation Options and pick the third option, Change Keyboard Layout (I3). The default is a standard UK, full size keyboard. If that’s what you’re using, then you don’t need to do this. However, it’s still worth looking at in case you do happen to have a different keyboard. I wanted to change mine to a US keyboard instead.</p><p>0_1465932457562_010-raspiconfig.png</p><p>By default the Generic 105-key (Intl) PC version is selected. For most cases, that’s fine, just hit enter/return on that and it will take you to the layout option. Note the default UK settings:</p><p>0_1465932529172_012-raspiconfig.png</p><p>Since I wanted a US layout, I selected Other.</p><p>0_1465932579015_012-raspiconfig.png</p><p>On the next screens, I picked the English (US) for the country, again English (US) for the layout,The default for the keyboard layout, and No compose key</p><p>0_1465932880569_013-raspiconfig.png</p><p>0_1465932893456_014-raspiconfig.png</p><p>0_1465932901366_015-raspiconfig.png</p><p>0_1465932910201_016-raspiconfig.png</p><p>At the end of this, it will ask you what you want the CTRL-ALT-Backspace combination to do. Normally it does nothing, but it can be configured so that if you hit that combination, it instantly kills the X-Server (and depending on the OS setup, will restart it fresh.) This was a more applicable when X11 was still in its infancy and things crashed a lot. Over the years, things became more stable, threads started getting removed from the main process, so applications could be killed and restarted without needing to completely kill the X-Server itself. However, it’s still around today. I have yet to have the X-Server on my rpi crash on me, ever. And if things really get completely bogged down, I just restart it remotely. Specially since this isn’t going to have a keyboard on it, there’s no sense in configuring this option, so I left it as No.</p><p>0_1465933095320_017-raspiconfig.png</p><p>Ok, one more time, go back into Internationalisation Options and pick the last item, Change Wi-fi Country (I4). This will set the correct channel frequencies available. In the US, channels 1 through 11 are common. Channels 12 and 13 are allowed, but for low power only, and channel 14 is forbidden. For the rest of the world, channels 12-13 are not restricted. And for those in Japan, well aren’t you guys special … you get to use channel 14 as well (only specific protocols.)</p><p>0_1465933365567_018-raspiconfig.png</p><p>0_1465933378615_019-raspiconfig.png</p><p>0_1465933391670_020-raspiconfig.png</p><h3 id="Step-3-1"><a href="#Step-3-1" class="headerlink" title="Step 3"></a>Step 3</h3><p>Scroll down to Advanced Options and select it. Pick the second option, Hostname (A2). Here you will give your rpi a name. By default it’s raspberrypi but why be like the rest of the world? You can change that.</p><p>0_1465933619435_023-raspiconfig.png</p><p>Make sure you read the warning that pops up, then set the name to whatever you want. For example, I changed mine to magicpi … after all, it will be running MagicMiror! (the screen shot shows the default setting)</p><p>0_1465934297102_025-raspiconfig.png</p><p>Once back at the main screen, pick Advanced options again and scroll down to SSH (A4). I like having the SSH server running because it allows me to connect to the rpi from anywhere on my network using a terminal program. So I don’t need to have a keyboard and mouse connected to the rpi itself, I can log into it using a different machine. But if you don’t need/want this, you can turn off/on the SSH server. In this case, I wanted mine turned on</p><p>0_1465933788724_026-raspiconfig.png</p><p>0_1465933800224_027-raspiconfig.png</p><p>Optional Camera Step<br>Are you using a Raspberry Pi specific camera? If so, you need to enable the rpi to work with it. Scroll down to option 6, Enable Camera and turn it on.</p><p>0_1465933463193_021-raspiconfig.png</p><h3 id="Step-4-1"><a href="#Step-4-1" class="headerlink" title="Step 4"></a>Step 4</h3><p>Done! When you’re back at the main screen after the last step, press the TAB key and highlight Finish at the bottom and hit return/enter. It will ask if you want to restart to which you will say Yes of course.</p><p>0_1465933849440_028-raspiconfig.png</p><p>0_1465933905935_029-raspiconfig.png</p><p>A Life? Cool! Where can I download one of those from?<br>2<br>KirAsh4Moderator<br>about a year ago</p><h2 id="Configuring-Wireless"><a href="#Configuring-Wireless" class="headerlink" title="Configuring Wireless"></a>Configuring Wireless</h2><p>Tired of the mile long posts? Well, here’s a short one. As I noted earlier, I will be running my rpi wirelessly. If you are physically connecting it to your network using a cable, you can skip this post.</p><h3 id="Step-1-2"><a href="#Step-1-2" class="headerlink" title="Step 1"></a>Step 1</h3><p>Once your rpi reboots and you’re back at the graphical desktop, launch the Terminal program (it’s a black monitor icon on the menu bar at the top.) Edit the wpa_supplicant.conf file to add your network information</p><p>0_1465935687240_030-wifi-config-sm.png</p><h3 id="Step-2-2"><a href="#Step-2-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>At the bottom of the contents, add your network information. Note the quotation marks as this is specially important if you have a space in your wireless network name. Same for the password part. When you’re done editing, press CTRL-X to exit, saying Y(es) to saving the changes.</p><p>0_1465935941427_031-wifi-config-sm.png</p><h3 id="Step-3-2"><a href="#Step-3-2" class="headerlink" title="Step 3"></a>Step 3</h3><p>Time to reboot and make sure the rpi comes up and successfully connects to your wireless network.</p><p>0_1465936127908_032-wifi-config-sm.png</p><p>If all went well, when the rpi reboots and comes back to the graphical desktop, in the upper right corner you should see a familiar blue WiFi icon.</p><p>0_1465936267885_wifi-icon.png</p><p>And if you want to make double sure that it connected, you can open a Terminal window again, and type in ifconfig and look for the wlan0 section</p><p>0_1465936892163_wifi-ifconfig-sm.png</p><p>You’re looking for it to have a valid IP that belongs to your network. The specific private network that this rpi is connected to is in the 192.168.25.x range, so this validates that the rpi connected and received an IP from the DHCP server.</p><p>If you are physically connecting the rpi to a network hub or router, you need to look at the eth0 section at the top.</p><p>So what if it failed? Then you’d want to check a few things:</p><pre><code>Did you enter the corect information in the wpa_supplicant.conf file above? Go back and check again.Is your wireless router set to block unknown hosts? In a secure environment, it could be (mine is.) Make sure you allow it to connect and receive an IP from the router.Are you in range of the wireless router?</code></pre><p>A Life? Cool! Where can I download one of those from?<br>1<br>KirAsh4Moderator<br>about a year ago</p><h2 id="Cleaning-up-and-updating-the-operating-system"><a href="#Cleaning-up-and-updating-the-operating-system" class="headerlink" title="Cleaning up and updating the operating system"></a>Cleaning up and updating the operating system</h2><p>Ready for some fun? Let’s clean up the rpi OS and remove some of the big packages and a few things that we won’t need. This is but a small list of apps, but they are by far the biggest ones aside from the X-server itself.</p><p>First, let’s look at the current state of the storage:</p><p>0_1465938488348_033-df-stock-sm.png</p><p>The df command will show you storage across the entire file system (or it can be restricted with specific options.) The -k option shows the values in 1K block format, while the -h option refers to the human readable option, which prints the sizes in powers of 1024. So we can see the /dev/root/ file system is at 48% full. That’s just the default Jessie installation!</p><p>Now, for all intents and purposes, this is just fine. It still has over 50% of the file system free and if you aren’t doing anything else with it, this is fine, you can leave it alone. However, I run all of my systems lean, meaning I will remove all (or most) of the stuff I won’t be using for the specific application. And in this case, I only removed the big space hogs that I know I will never use. There are a lot of packages that you could remove, since MM does not need them, but I didn’t care to do that … yet. So let’s move on.</p><h3 id="Step-1-3"><a href="#Step-1-3" class="headerlink" title="Step 1"></a>Step 1</h3><p>Remove unnecessary software packages. I started with the stuff I know I won’t be using and the big stuff!</p><pre><code>idle3            java-common        libreoffice        minecraft-piscratch            nuscratch        penguinspuzzle        python-minecraftpipython3-minecraftpi    smartsim        sonic-pi        wolfram-engine</code></pre><p>The command I used to remove all of them is:<br>sudo apt-get remove –purge idle3 java-common libreoffice* minecraft-pi scratch nuscratch penguinspuzzle python-minecraftpi python3-minecraftpi smartsim sonic-pi wolfram-engine</p><p>NOTE: on libreoffice I added a star at the end, making it libreoffice*. This is because there’s a single libreoffice package, as well as several libreoffice-* packages, and if you don’t add the star, it will only remove the one, while leaving all the rest.</p><p>When you run that, it will collect everything that needs removing and present you with a [Y/n] question. Notice the amount of space that’s about to be reclaimed:</p><p>0_1465939281578_034-aptget-remove.png</p><p>You’re reading that right, a whopping 1,112MB, or 1.1GB worth of space. Let that run and remove all those packages.</p><h3 id="Step-2-3"><a href="#Step-2-3" class="headerlink" title="Step 2"></a>Step 2</h3><p>Once completed, we’ll also remove those that aren’t needed anymore:<br>sudo apt-get autoremove<br>It will present you with a list of packages that aren’t used anymore (since you just removed all those other ones above). Again, say Y(es) to the question:</p><p>0_1465939485028_035-aptget-remove-sm.png</p><p>Now, for comparison, let’s look at the storage usage again:</p><p>0_1465939560323_036-df-clean-sm.png</p><p>Look at that, we went from 48% full, down to 30%, or from 3.3GB down to 2.1GB used. That’s a lot of space reclaimed!</p><h3 id="Step-3-3"><a href="#Step-3-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>Moving on. It’s time to run an update/upgrade on the system packages. You do that by entering the following commands:<br>sudo apt-get update<br>sudo apt-get upgrade<br>Or if you want to do them both together:<br>sudo apt-get update ; sudo apt-get upgrade</p><p>First the update:</p><p>0_1465939942396_037-aptget-update-sm.png</p><p>Followed by the upgrade:</p><p>0_1465939959016_039-aptget-update-sm.png</p><p>So why two separate commands? The update command will refresh the mirror list and available packages from the distribution mirrors. This sets up the next command, upgrade, with the necessary files to compare against. Then the upgrade command will compare all the packages that are currently installed with the mirror lists and show you all the ones that need to be upgraded. You did say Y(es) to that, right?</p><h3 id="Step-4-2"><a href="#Step-4-2" class="headerlink" title="Step 4"></a>Step 4</h3><p>The last thing we need to do is make sure the firmware on the rpi is current. Performing a sudo apt-get upgrade does not always trigger this (in fact, I have yet to see it do that), so we’ll do it manually. The command for that is:<br>sudo rpi-update</p><p>0_1465940236832_042-rpiupdate-sm.png</p><p>Note that it requires a reboot once that’s completed. A sudo reboot will get that done for you.</p><p>Now let’s look at the storage usage once more:</p><p>0_1465940359726_043-df-final-sm.png</p><p>That’s not too shabby at all. 2.3GB out of 7.2GB used … I’m happy with that.</p><p>You are now ready to start installing MagicMirror²!</p><p>A Life? Cool! Where can I download one of those from?<br>3<br>KirAsh4Moderator<br>about a year ago</p><h2 id="Installing-MagicMirror²"><a href="#Installing-MagicMirror²" class="headerlink" title="Installing MagicMirror²"></a>Installing MagicMirror²</h2><p>Thanks to @MichMich and his outstanding installation script, installing MagicMirror² is pretty straight forward.</p><h3 id="Step-1-4"><a href="#Step-1-4" class="headerlink" title="Step 1"></a>Step 1</h3><p>After you’ve configured and updated your Raspberry Pi and rebooted, launch a Terminal window again and type in<br>bash -c “$(curl -sL <a href="https://raw.githubusercontent.com/MichMich/MagicMirror/master/installers/raspberry.sh)&quot;">https://raw.githubusercontent.com/MichMich/MagicMirror/master/installers/raspberry.sh)&quot;</a></p><p>This will start the installation process for you:</p><p>0_1466018397542_044-mm-install.sm.png</p><h3 id="Step-2-4"><a href="#Step-2-4" class="headerlink" title="Step 2"></a>Step 2</h3><p>A few configurations still need to be done on the Raspberry Pi, specific for MagicMirror². Let’s start with rotating the display vertically. For this, you’ll need to edit one of the boot configurations. (Please note: If you plan on running MagicMirror² as a landscape (or wide) display, you do not need to do this.)</p><p>Type in sudo nano /boot/config.txt and add the following to the file. Where you add it doesn’t really matter:</p><pre><code># Rotate display verticallydisplay_rotate=1</code></pre><p>Press CTRL-X when you’re done, and say Y(es) to saving the changes.</p><p>0_1466022914081_047-configure-rpi.sm.png</p><h3 id="Step-3-4"><a href="#Step-3-4" class="headerlink" title="Step 3"></a>Step 3</h3><p>Let’s disable the screen saver and screen blanking as well. This needs to be done in two places. First in the autostart configuration:<br>sudo nano /etc/xdg/lxsession/LXDE-pi/autostart</p><p>And add the following to the bottom of the file:</p><pre><code>@xset s noblank@xset s off@xset -dpms</code></pre><p>0_1466022921947_049-configure-rpi-sm.png</p><p>Next in the X-windows manager configuration:<br>sudo nano /etc/lightdm/lightdm.conf</p><p>Scroll down to the [SeatDefaults] section and look for the xserver-command line below that. Change the line to look like this:<br>xserver-command=X -s 0 -dpms (so you’re removing the # on the front, and adding the missing bits at the end.) Again, hit CTRL-X and say Y(es) to saving the file.</p><p>0_1466023313607_050-configure-rpi.sm.png</p><h3 id="Step-4-3"><a href="#Step-4-3" class="headerlink" title="Step 4"></a>Step 4</h3><p>A Raspberry Pi is configured to automatically shutdown parts of the hardware that aren’t actively in use. This includes the WiFi driver. This will cause MagicMiror² to occasionally fail to fetch updates for things like the newsfeed, weather, and others. You can disable the power saving feature for the WiFi from the interfaces configuration file:<br>sudo nano /etc/network/interfaces</p><p>Find the wlan0 section and add wireless-power off below it:</p><p>0_1466023583053_051-configure-rpi.sm.png</p><p>Once you’re done with that, reboot the rpi one more time with sudo reboot and when it comes back up again, open a Terminal window and type in iwconfig and you should see that the Power Management is now off:</p><p>0_1466024885350_052-iwconfig.sm.png</p><p>At this point you have completed the basic install for MagicMirror². The next step is to create a valid configuration file for it so you can test it out. You can do that by going into the MagicMirror’s config folder:</p><pre><code>pi@magicpi:~ $ cd MagicMirror/configpi@magicpi:~/MagicMirror/config $ cp config.js.sample config.js</code></pre><p>You can now try to start MagicMirror².</p><pre><code>pi@magicpi:~/MagicMirror/config $ cd $HOME/MagicMirrorpi@magicpi:~/MagicMirror $ npm start</code></pre><p>If everything went well, your screen should load up the MagicMirror² interface. The weather module will tell you that you don’t have a valid APPID, but once set, your screen should look like this:</p><p>0_1466023961725_mm-capture.png</p><h2 id="Congratulations"><a href="#Congratulations" class="headerlink" title="Congratulations!"></a>Congratulations!</h2><p>A Life? Cool! Where can I download one of those from?</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微带与共面波导CPWG设计</title>
      <link href="/zsh.github.io/2020/08/08/cpwg/"/>
      <url>/zsh.github.io/2020/08/08/cpwg/</url>
      
        <content type="html"><![CDATA[<p> 从射频到毫米波频段，共面波导（CPW）电路是普遍应用的微带形式。传统的共面波导是在PCB介质基片的表面上制作出导体线，底层制作接成平面GND层。被称为接地共面波导（CPW或CPWG）的电路是传统共面波导的一种改进电路。CPWG是在CPW电路结构的底面增加了一个接地平面，并通过过孔via连接上下地平面。<br><img src="https://i.loli.net/2020/08/08/Ni1FfgE23YZLyuU.jpg" alt="图1"><br>尽管CPW和CPWG两种电路都对邻道信号具有超好的隔离度，从而降低在高密度电路中的串扰。但相比CPW，CPWG会使不连续处辐射量增加，其原因是CPWG中接地过孔的设计会影响阻抗，并增加损耗。但另一方面，当工作频率升高时，相比微带线电路， CPWG地孔的设计可以允许更大的介质材料厚度。其次，在大功率电路应用中，CPWG比CPW的散热性能更佳，而且增加的接地平面也提高了电路的机械稳定性。最后，当工作在微波和毫米波频率时，对于相同电路材料的微带线和CPWG，CPWG的表面波泄露和辐射损耗更小。<br><img src="http://file.elecfans.com/web1/M00/51/8E/pIYBAFsLXE-AQzQWAABv8aguChA776.jpg" alt="图2"></p><p>在毫米波及以下频段，CPW和CPWG的生产工艺相对简单且电路性能的稳定性良好。通过传输线传播的电磁波能量，特别是CPWG，其大部分能量都保留在PCB介质材料内部。和微带线电路相比，虽然CPW和CPWG都具有更高的导体损耗，但CPW和CPWG电路的损耗特征是与频率呈线性关系。而微带线电路，特别是在较高频段时，损耗（因与辐射损耗有关）会随着频率不断变化。此外，CPW和CPWG的损耗可以通过合理设计过孔位置及电路尺寸来降低。</p><p><img src="http://file.elecfans.com/web1/M00/51/8E/pIYBAFsLXFGAfneVAACGiZGzZEo581.jpg" alt="图3"></p><p> 在毫米波等高频频段，电路的尺寸变得越来越小，电路中许多关键元件的尺寸将接近电路所传输信号的波长。对于微带线和带状线，反射损耗和辐射损耗会随着频率的上升而增加，选择合适的电路设计变得尤为关键。如果设计得当，CPW特别是CPWG电路在高频段可获得良好的性能，且可常与微带线相结合使用。在许多高频设计实例中，CPWG都作为微带传输线接口处的高性能接口。</p><p>CPW是在介质基片的顶层制作导体，并在导体两侧制作接地平面，呈现地线-信号线-地线（GSG）布局。CPW的地平面与信号线是共面的，通过调节信号线宽度及信号线与地之间的间距来控制阻抗。当信号线的宽度渐变至连接器引脚时，CPW的阻抗值可以保持为常数。</p><p>CPWG在介质层的底面增加了接地平面，并通过过孔等方式实现上下接地面的连接。在CPW中电磁能量主要集中在介质层内部。对于CPW和CPWG，当介质基片的厚度为导线宽度2倍以上时，能有效抑制电磁能量向空气中泄露。当大于2倍以上时，特征阻抗基本由中心导线宽度及导线和接地平面的间距决定。CPW特征阻抗值通常在20～250 Ω，而微带线与带状线特征阻抗值通常分别在20～120 Ω和35～250 Ω。</p><h2 id="CPW和CPWG中的耦合"><a href="#CPW和CPWG中的耦合" class="headerlink" title="CPW和CPWG中的耦合"></a>CPW和CPWG中的耦合</h2><p>与任何电路技术一样，CPW和CPWG有各自的优缺点。针对不同的应用需要，包括数字电路和模拟电路，必须综合权衡其利弊。CPW和CPWG顶层接地线产生的奇模和偶模电流会造成电路的多种模的耦合。当频率升高时， CPW和CPWG的GSG结构中较近的间隔距离易于形成强耦合，获得较好的寄生模抑制能力，且辐射损耗也较低。增加信号线和地之间的间距或增加信号线宽度（低导体损耗和插入损耗）都能有效降低损耗。当适当增加信号线和地之间的间距，即达到松耦合时，可以降低电路的导体损耗和插入损耗。但其代价是带来更为严重的辐射损耗和杂散失真。因此，对于CPW和CPWG，合适的耦合强度选取是既要有利于获得低损耗的同时也能有效抑制寄生模。</p><p>一般情况下，电路的尺寸越薄越利于降低辐射损耗。对于工作于30GHz或者更高频的毫米波电路，辐射损耗是电路总体损耗的一个重要部分。辐射损耗很大程度上与PCB材料的Dk值（介电常数）有关。电路材料的Dk值越高，电路的辐射损耗就越小，然而高Dk值会带来更大的导体损耗。因为当Dk值增大时，为保持特征阻抗不变，信号线的宽度会变窄。因此，导体损耗将增大。</p><p><img src="http://file.elecfans.com/web1/M00/51/8E/pIYBAFsLXFGAZ_RTAACli1GvqmY257.jpg" alt="图4"></p><p>PCB电路中铜的表面粗糙度会影响电场和电流。有效介电常数会随铜表面粗糙度的增加而增大。此外，铜表面粗糙度会影响电路的插入损耗，通常CPWG的影响比微带线小。因为在CPWG电路中，电场和电流集中分布在PCB上GSG区的内部。而在微带线电路中，电场和电流沿着金属导体底部即金属导体粗糙面传播。因此，CPWG的插入损耗受粗糙度的影响比微带线更小。</p><p>仿真软件的使用，如是德科技ADS，可以为各种CPW和CPWG电路设计提供合适的参数，比如走线宽度、介质厚度、接地面之间的间距等，这些参数都会对最终性能产生重大影响。</p>]]></content>
      
      
      <categories>
          
          <category> 射频微波 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 射频微波 </tag>
            
            <tag> CPW </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用于石油勘探的电磁探测方法仿真</title>
      <link href="/zsh.github.io/2020/08/07/comsol_1/"/>
      <url>/zsh.github.io/2020/08/07/comsol_1/</url>
      
        <content type="html"><![CDATA[<h1 id="在-COMSOL-Multiphysics-5-5-版本中创建"><a href="#在-COMSOL-Multiphysics-5-5-版本中创建" class="headerlink" title="在 COMSOL Multiphysics 5.5 版本中创建"></a>在 COMSOL Multiphysics 5.5 版本中创建</h1><h1 id="用于石油勘探的电磁探测方法仿真"><a href="#用于石油勘探的电磁探测方法仿真" class="headerlink" title="用于石油勘探的电磁探测方法仿真"></a>用于石油勘探的电磁探测方法仿真</h1><pre><code>此模型基于《 COMSOL 软件许可协议》5.5 版本授权。所有商标均为其各自所有者的财产。请参见 cn.comsol.com/trademarks。</code></pre><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="海洋可控源电磁法-CSEM-是近年来发展起来的一种前景广阔的石油勘探技术。本例"><a href="#海洋可控源电磁法-CSEM-是近年来发展起来的一种前景广阔的石油勘探技术。本例" class="headerlink" title="海洋可控源电磁法 (CSEM) 是近年来发展起来的一种前景广阔的石油勘探技术。本例"></a>海洋可控源电磁法 (CSEM) 是近年来发展起来的一种前景广阔的石油勘探技术。本例</h3><p>演示了此方法的一种应用，其中采用被拖曳在海床上方 150 m 高度移动的 1 Hz 水平电<br>偶极天线，同时采用一组海床接收器测量距天线不同距离处的电场。在足够远的距离<br>处测量时，部分传输能量被高电阻率储油层反射/导引，结果比没有储油层时接收到更<br>高的信号。</p><h2 id="模型定义"><a href="#模型定义" class="headerlink" title="模型定义"></a>模型定义</h2><p>计算域是半径为 5 km 的球体，顶部区域表示空气。在 1 Hz 这样的低频下，该域需要保</p><p>持数值稳定，因此人为指定了 0.001 S/m 的电导率。我们在球体中面上方指定了 100 m</p><p>深的海水域，电导率为 3 S/m，相对介电常数为 80 。在中面下方，指定岩石的电导率为</p><p>1.5 S/m，相对介电常数为 30 。在平均深度为 250 m 处的岩石中嵌有 100 m 深、4 km ×</p><p>1 km 宽的块状油气储层，其电导率为 0.01 S/m，介电常数为 4 。发射器被模拟为中面上</p><p>方 150 m 处的 一个较短的 10 kA 幅值的交变线电流。在球体外边界，散射型边界条件</p><p>吸收出射球面波。我们针对计算域内的电场矢量 <strong>E</strong> 求解以下方程：</p><p>其中 r 表示相对磁导率， <em>j</em> 表示虚部单位， 表示电导率， 表示角频率，r 表示相</p><p>对介电常数， 0 表示自由空间介电常数。</p><h2 id="结果与讨论"><a href="#结果与讨论" class="headerlink" title="结果与讨论"></a>结果与讨论</h2><p>下面的第一个图显示了以分贝为单位的电场大小切面图，图中油气储层的导向作用清晰可见。</p><p> 图 1 ：电场大小被绘制在含天线（红点）的切面中。油气储层的导向作用清晰可见。</p><p> 下一个绘图定量显示了这种效应，其中将海床的电场大小对比绘制为随距离变化，用于有油气储层和无油气储层情况的仿真。天线正下方的电场值最大，在此处，有无油气储层这两种情况的差异非常小。远离天线的情况下，当存在油气储层时，信号强度明显更高。</p><p>图 2 ：海床的电场大小随距离变化的情况。虚线表示不存在油气储层的情况。</p><h2 id="COMSOL-软件建模注意事项"><a href="#COMSOL-软件建模注意事项" class="headerlink" title="COMSOL 软件建模注意事项"></a>COMSOL 软件建模注意事项</h2><p> 尽管本例中的波长远大于计算域，但是仍采用“RF 模块”中提供的三维电磁波公式。您也可以使用“AC/DC 模块”中的准静态公式创建本例。</p><p>案例库路径：RF_Module/Scattering_and_RCS/marine_csem</p><h2 id="建模操作说明"><a href="#建模操作说明" class="headerlink" title="建模操作说明"></a>建模操作说明</h2><p>从文件菜单中选择新建。</p><p>新建</p><p>在新建窗口中， 单击模型向导。</p><p>模型向导</p><p><strong>1</strong> 在模型向导窗口中， 单击三维。</p><p><strong>2</strong> 在选择物理场树中选择射频 <strong>&gt;</strong> 电磁波，频域 <strong>(emw)</strong> 。</p><p><strong>3</strong> 单击添加。</p><p><strong>4</strong> 单击研究。</p><p><strong>5</strong> 在选择研究树中选择一般研究 <strong>&gt;</strong> 频域。</p><p><strong>6</strong> 单击完成。</p><p>几何 <strong>1</strong></p><p>球体 <em>1 (sph1)</em><br><strong>1</strong> 在几何工具栏中单击球体。</p><p><strong>2</strong> 在球体的设置窗口中， 定位到大小栏。</p><p><strong>3</strong> 在半径文本框中键入“5e3”。</p><p>圆柱体 <em>1 (cyl1)</em></p><p><strong>1</strong> 在几何工具栏中单击圆柱体。</p><p><strong>2</strong> 在圆柱体的设置窗口中， 定位到大小和形状栏。</p><p><strong>3</strong> 在半径文本框中键入“6e3”。</p><p><strong>4</strong> 在高度文本框中键入“1e3”。</p><p>交集 <em>1 (int1)</em></p><p><strong>1</strong> 在几何工具栏中单击布尔操作和分割，然后选择交集。</p><p><strong>2</strong> 单击图形窗口，然后按 Ctrl+A 选择这两个对象。</p><p>球体 <em>2 (sph2)</em></p><p><strong>1</strong> 在几何工具栏中单击球体。</p><p><strong>2</strong> 在球体的设置窗口中， 定位到大小栏。</p><p><strong>3</strong> 在半径文本框中键入“5e3”。</p><p>长方体 <em>1 (blk1)</em></p><p><strong>1</strong> 在几何工具栏中单击长方体。</p><p><strong>2</strong> 在长方体的设置窗口中， 定位到大小和形状栏。</p><p><strong>3</strong> 在宽度文本框中键入“4e3”。</p><p><strong>4</strong> 在深度文本框中键入“1e3”。</p><p><strong>5</strong> 在高度文本框中键入“ 100 ”。</p><p><strong>6</strong> 定位到位置栏。 从基列表中选择居中。</p><p><strong>7</strong> 在 <strong>z</strong> 文本框中键入“-250”。</p><p>线段 <em>1 (ls1)</em></p><p><strong>1</strong> 在几何工具栏中单击更多体素，然后选择线段。</p><p><strong>2</strong> 在线段的设置窗口中， 定位到起点栏。</p><p><strong>3</strong> 从指定列表中选择坐标。</p><p><strong>4</strong> 定位到终点栏。 从指定列表中选择坐标。</p><p><strong>5</strong> 定位到起点栏。 在 <strong>x</strong> 文本框中键入“-10”，将 <strong>z</strong> 设为 150 。</p><p><strong>6</strong> 定位到终点栏。 在 <strong>x</strong> 文本框中键入“ 10 ”，将 <strong>z</strong> 设为 150 。</p><p>线段 <em>2 (ls2)</em></p><p><strong>1</strong> 在几何工具栏中单击更多体素，然后选择线段。</p><p><strong>2</strong> 在线段的设置窗口中， 定位到起点栏。</p><p><strong>3</strong> 从指定列表中选择坐标。</p><p><strong>4</strong> 定位到终点栏。 从指定列表中选择坐标。</p><p><strong>5</strong> 定位到起点栏。 在 <strong>x</strong> 文本框中键入“-5e3”。</p><p><strong>6</strong> 定位到终点栏。 在 <strong>x</strong> 文本框中键入“5e3”。</p><p><strong>7</strong> 单击构建所有对象。</p><p><strong>8</strong> 在图形工具栏中单击线框渲染按钮。</p><p>材料</p><p>材料 <em>1 (mat1)</em></p><p><strong>1</strong> 在模型开发器窗口的组件 <strong>1(comp1)</strong> 节点下，右键单击材料并选择空材料。</p><p><strong>2</strong> 在材料的设置窗口中， 在标签文本框中键入“海水”。</p><p><strong>3</strong> 选择“域” 1 。</p><p><strong>4</strong> 定位到材料属性明细栏。 在表中输入以下设置：</p><p>材料 <em>2 (mat2)</em></p><p><strong>1</strong> 右键单击材料并选择空材料。</p><p><strong>2</strong> 在材料的设置窗口中， 在标签文本框中键入“岩石”。</p><p><strong>3</strong> 选择“域” 2 和 4 。</p><p><strong>4</strong> 定位到材料属性明细栏。 在表中输入以下设置：</p><p>材料 <em>3 (mat3)</em></p><p><strong>1</strong> 右键单击材料并选择空材料。</p><p><strong>2</strong> 在材料的设置窗口中， 在标签文本框中键入“油”。</p><p><strong>3</strong> 选择“域” 4 。</p><pre><code>请注意，此选择会部分替代您刚刚为岩石定义的几何范围设置。稍后您只需禁用“油”节点，即可方便地运行没有油气储层情况下的模型。</code></pre><pre><code>属性 变量 值 单位 属性组相对介电常数</code></pre><pre><code>epsilonr_iso ; epsilonrii =epsilonr_iso, epsilonrij = 0</code></pre><p>(^801) 基本</p><h3 id="相对磁导率"><a href="#相对磁导率" class="headerlink" title="相对磁导率"></a>相对磁导率</h3><pre><code>mur_iso ; murii = mur_iso, murij = 0^11 基本</code></pre><pre><code>电导率 sigma_iso ; sigmaii = sigma_iso,sigmaij = 0</code></pre><p>(^3) S/m 基本<br>属性 变量 值 单位 属性组<br>相对介电<br>常数<br>epsilonr_iso ; epsilonrii =<br>epsilonr_iso, epsilonrij = 0<br>(^301) 基本</p><h3 id="相对磁导率-1"><a href="#相对磁导率-1" class="headerlink" title="相对磁导率"></a>相对磁导率</h3><pre><code>mur_iso ; murii = mur_iso, murij =0</code></pre><p>(^11) 基本<br>电导率 sigma_iso ; sigmaii = sigma_iso,<br>sigmaij = 0<br>1.5 S/m 基本</p><h3 id="4-定位到材料属性明细栏。-在表中输入以下设置："><a href="#4-定位到材料属性明细栏。-在表中输入以下设置：" class="headerlink" title="4 定位到材料属性明细栏。 在表中输入以下设置："></a>4 定位到材料属性明细栏。 在表中输入以下设置：</h3><p>材料 <em>4 (mat4)</em></p><p><strong>1</strong> 右键单击材料并选择空材料。</p><p><strong>2</strong> 在材料的设置窗口中， 在标签文本框中键入“空气”。</p><p><strong>3</strong> 选择“域” 3 。</p><p><strong>4</strong> 定位到材料属性明细栏。 在表中输入以下设置：</p><p>电磁波，频域 <strong>(EMW)</strong></p><p>散射边界条件 <em>1</em></p><p><strong>1</strong> 在模型开发器窗口的组件 <strong>1(comp1)</strong> 节点下，右键单击电磁波，频域 <strong>(emw)</strong> 并选择散射</p><pre><code>边界条件。</code></pre><p><strong>2</strong> 在散射边界条件的设置窗口中， 定位到边界选择栏。</p><p><strong>3</strong> 从选择列表中选择所有边界。</p><p><strong>4</strong> 定位到散射边界条件栏。 从散射波类型列表中选择球面波。</p><p>边电流 <em>1</em></p><p><strong>1</strong> 在物理场工具栏中单击边，然后选择边电流。</p><pre><code>现在，您将在几何结构中心附近的非常短的边上施加电流。放大几倍更便于操作。</code></pre><p><strong>2</strong> 在图形工具栏中单击放大按钮。</p><p><strong>3</strong> 选择“边” 17 。</p><pre><code>属性 变量 值 单位 属性组相对介电常数</code></pre><pre><code>epsilonr_iso ; epsilonrii =epsilonr_iso, epsilonrij = 0</code></pre><p>(^41) 基本</p><h3 id="相对磁导率-2"><a href="#相对磁导率-2" class="headerlink" title="相对磁导率"></a>相对磁导率</h3><pre><code>mur_iso ; murii = mur_iso, murij =0</code></pre><p>(^11) 基本<br>电导率 sigma_iso ; sigmaii = sigma_iso,<br>sigmaij = 0<br>0.01 S/m 基本<br>属性 变量 值 单位 属性组<br>相对介电<br>常数<br>epsilonr_iso ; epsilonrii =<br>epsilonr_iso, epsilonrij = 0<br>(^11) 基本</p><h3 id="相对磁导率-3"><a href="#相对磁导率-3" class="headerlink" title="相对磁导率"></a>相对磁导率</h3><pre><code>mur_iso ; murii = mur_iso, murij =0</code></pre><p>(^11) 基本<br>电导率 sigma_iso ; sigmaii = sigma_iso,<br>sigmaij = 0<br>0.001 S/m 基本</p><h3 id="4-在模型开发器窗口中，单击边电流-1-。"><a href="#4-在模型开发器窗口中，单击边电流-1-。" class="headerlink" title="4 在模型开发器窗口中，单击边电流 1 。"></a>4 在模型开发器窗口中，单击边电流 1 。</h3><h3 id="5-在边电流的设置窗口中，-定位到边电流栏。"><a href="#5-在边电流的设置窗口中，-定位到边电流栏。" class="headerlink" title="5 在边电流的设置窗口中， 定位到边电流栏。"></a>5 在边电流的设置窗口中， 定位到边电流栏。</h3><p><strong>6</strong> 在 <em>I</em> 0 文本框中键入“1e4”。</p><h3 id="7-在图形工具栏中单击缩放到窗口大小按钮。"><a href="#7-在图形工具栏中单击缩放到窗口大小按钮。" class="headerlink" title="7 在图形工具栏中单击缩放到窗口大小按钮。"></a>7 在图形工具栏中单击缩放到窗口大小按钮。</h3><p>网格 <strong>1</strong></p><p><strong>1</strong> 在模型开发器窗口的组件 <strong>1(comp1)</strong> 节点下，单击网格 <strong>1</strong> 。</p><p><strong>2</strong> 在网格的设置窗口中， 定位到物理场控制网格栏。</p><p><strong>3</strong> 在表中输入以下设置：</p><h3 id="4-从单元大小列表中选择细化。"><a href="#4-从单元大小列表中选择细化。" class="headerlink" title="4 从单元大小列表中选择细化。"></a>4 从单元大小列表中选择细化。</h3><h3 id="5-单击全部构建。"><a href="#5-单击全部构建。" class="headerlink" title="5 单击全部构建。"></a>5 单击全部构建。</h3><p>研究 <strong>1</strong></p><p>步骤 <em>1</em> ：频域<br><strong>1</strong> 在模型开发器窗口的研究 <strong>1</strong> 节点下，单击步骤 <strong>1</strong> ：频域。</p><pre><code>贡献者 使用电磁波，频域 (emw)</code></pre><h3 id="2-在频域的设置窗口中，-定位到研究设置栏。"><a href="#2-在频域的设置窗口中，-定位到研究设置栏。" class="headerlink" title="2 在频域的设置窗口中， 定位到研究设置栏。"></a>2 在频域的设置窗口中， 定位到研究设置栏。</h3><p><strong>3</strong> 在频率文本框中键入“1[Hz]”。</p><p><strong>4</strong> 在主屏幕工具栏中单击计算。</p><p>结果</p><p>继续重现图 1 。</p><p>多切面<br><strong>1</strong> 在模型开发器窗口中展开结果 <strong>&gt;</strong> 电场 <strong>(emw)</strong> 节点。</p><p><strong>2</strong> 右键单击多切面并选择删除。</p><p>切面 <em>1</em><br><strong>1</strong> 在模型开发器窗口中，右键单击电场 <strong>(emw)</strong> 并选择切面。</p><p><strong>2</strong> 在切面的设置窗口中， 定位到表达式栏。</p><p><strong>3</strong> 在表达式文本框中键入“20*log10(emw.normE)”。</p><p><strong>4</strong> 选中描述复选框。</p><p><strong>5</strong> 在关联文本框中键入“电场模，dB”。</p><p><strong>6</strong> 定位到平面数据栏。 从平面列表中选择 <strong>ZX</strong> 平面。</p><p><strong>7</strong> 在平面数文本框中键入“ 1 ”。</p><p><strong>8</strong> 在电场 <strong>(emw)</strong> 工具栏中单击绘制。</p><p>三维截线 <em>1</em><br><strong>1</strong> 在结果工具栏中单击三维截线。</p><p><strong>2</strong> 在三维截线的设置窗口中， 定位到线数据栏。</p><p><strong>3</strong> 在点“ <strong>1</strong> ”行中，将 <strong>X</strong> 设为 -5e3。</p><p><strong>4</strong> 在点“ <strong>2</strong> ”行中，将 <strong>X</strong> 设为 5e3。</p><p>一维绘图组 <em>2</em><br><strong>1</strong> 在结果工具栏中单击一维绘图组。</p><p><strong>2</strong> 在一维绘图组的设置窗口中， 定位到数据栏。</p><p><strong>3</strong> 从数据集列表中选择三维截线 <strong>1</strong> 。</p><p><strong>4</strong> 单击以展开标题栏。 从标题类型列表中选择手动。</p><p><strong>5</strong> 在标题文本区中键入“电场模，对数刻度”。</p><p>线图 <em>1</em><br><strong>1</strong> 右键单击一维绘图组 <strong>2</strong> 并选择线图。</p><p><strong>2</strong> 在线图的设置窗口中， 定位到 <strong>y</strong> 轴数据栏。</p><p><strong>3</strong> 在表达式文本框中键入“20*log10(emw.normE)”。</p><p><strong>4</strong> 单击 <strong>x</strong> 轴数据栏右上角的替换表达式。 从菜单中选择模型 <strong>&gt;</strong> 组件 <strong>1&gt;</strong> 几何 <strong>&gt;</strong> 坐标 <strong>&gt;x-x</strong> 坐标。</p><pre><code></code></pre><p><strong>5</strong> 在一维绘图组 <strong>2</strong> 工具栏中单击绘制。<br>您刚刚生成的绘图应该模拟图 2 中的实线。继续将此结果与不存在油气储层的模型<br>结果进行比较。<br>材料</p><p>油 <em>(mat3)</em></p><p>在模型开发器窗口的组件 <strong>1(comp1)&gt;</strong> 材料节点下，右键单击油 <strong>(mat3)</strong> 并选择禁用。</p><p>研究 <strong>1</strong></p><p>解 <em>1 (sol1)</em><br><strong>1</strong> 在模型开发器窗口中展开研究 <strong>1&gt;</strong> 求解器配置节点。</p><p><strong>2</strong> 右键单击解 <strong>1(sol1)</strong> 并选择禁用。</p><pre><code>这样即可得到与第二种情况对应的单独的求解器节点。</code></pre><p><strong>3</strong> 在主屏幕工具栏中单击计算。</p><p>结果</p><p>多切面</p><p><strong>1</strong> 在模型开发器窗口中展开电场 <strong>(emw)1</strong> 节点，然后单击多切面。</p><p><strong>2</strong> 在多切面的设置窗口中， 定位到表达式栏。</p><p><strong>3</strong> 在表达式文本框中键入“20*log10(emw.normE)”。</p><p><strong>4</strong> 定位到多平面数据栏。 找到 <strong>X</strong> 平面子栏。 在平面数文本框中键入“ 0 ”。</p><p><strong>5</strong> 找到 <strong>Z</strong> 平面子栏。 在平面数文本框中键入“ 0 ”。</p><p><strong>6</strong> 在电场 <strong>(emw) 1</strong> 工具栏中单击绘制。</p><h3 id="三维截线-2"><a href="#三维截线-2" class="headerlink" title="三维截线 2"></a>三维截线 2</h3><h3 id="1-在结果工具栏中单击三维截线。"><a href="#1-在结果工具栏中单击三维截线。" class="headerlink" title="1 在结果工具栏中单击三维截线。"></a>1 在结果工具栏中单击三维截线。</h3><h3 id="2-在三维截线的设置窗口中，-定位到数据栏。"><a href="#2-在三维截线的设置窗口中，-定位到数据栏。" class="headerlink" title="2 在三维截线的设置窗口中， 定位到数据栏。"></a>2 在三维截线的设置窗口中， 定位到数据栏。</h3><p><strong>3</strong> 从数据集列表中选择研究 <strong>1/</strong> 解 <strong>2(sol2)</strong> 。</p><p><strong>4</strong> 定位到线数据栏。 在点“ <strong>1</strong> ”行中，将 <strong>X</strong> 设为 -5e3。</p><p><strong>5</strong> 在点“ <strong>2</strong> ”行中，将 <strong>X</strong> 设为 5e3。</p><p>线图 <em>2</em><br><strong>1</strong> 在模型开发器窗口中，右键单击一维绘图组 <strong>2</strong> 并选择线图。</p><p><strong>2</strong> 在线图的设置窗口中， 定位到数据栏。</p><p><strong>3</strong> 从数据集列表中选择三维截线 <strong>2</strong> 。</p><p><strong>4</strong> 定位到 <strong>y</strong> 轴数据栏。 在表达式文本框中键入“20*log10(emw.normE)”。</p><p><strong>5</strong> 单击 <strong>x</strong> 轴数据栏右上角的替换表达式。 从菜单中选择模型 <strong>&gt;</strong> 组件 <strong>1&gt;</strong> 几何 <strong>&gt;</strong> 坐标 <strong>&gt;x-x</strong> 坐标。</p><p><strong>6</strong> 单击以展开着色和样式栏。 找到线样式子栏。 从线列表中选择虚线。</p><p><strong>7</strong> 在一维绘图组 <strong>2</strong> 工具栏中单击绘制。</p>]]></content>
      
      
      <categories>
          
          <category> Comsol </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Comsol </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在树莓派上搭建BT下载机</title>
      <link href="/zsh.github.io/2020/08/07/raspberri%20pi/"/>
      <url>/zsh.github.io/2020/08/07/raspberri%20pi/</url>
      
        <content type="html"><![CDATA[<h2 id="树莓派4-4G内存版，操作系统raspbian"><a href="#树莓派4-4G内存版，操作系统raspbian" class="headerlink" title="树莓派4 4G内存版，操作系统raspbian"></a>树莓派4 4G内存版，操作系统raspbian</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>使用qbittorrent</p><pre><code>sudo apt-get install qbittorrent-noxqbittorrent-nox --webui-port=8081 -d</code></pre><p>然后在浏览器里输入你的ip:8081  进入qbittorrent web UI<br>默认用户名admin ，密码adminadmin</p><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><p>transmisson<br>更新树莓派：</p><pre><code>sudo apt-get install update</code></pre><p>安装transmission：</p><pre><code>sudo apt-get install transmission-daemon</code></pre><p>给用户授权：</p><pre><code>sudo usermod -a -G pi debian-transmission</code></pre><p>设置Transmission的配置文件：</p><pre><code>sudo vim /etc/transmission-daemon/settings.json</code></pre><p>设置下载目录为用户目录下的Downloads文件夹：<br>“download-dir”: “/home/pi/Downloads”,<br>设置未下载完成数据存放地点为Downloads文件夹：<br>“incomplete-dir”: “/home/pi/Downloads”,<br>设置Web登陆密码为：raspberry<br>“rpc-password”: “raspberry”,<br>设置Web登陆用户名：transmission<br>“rpc-username”: “transmission”,<br>允许Web登陆：（设置为true）<br>“utp-enabled”: true<br>设置完成之后，保存setting.json文件，重新启动transmission服务：</p><pre><code>sudo service transmission-daemon reload</code></pre><p>到这里可以在浏览器中输入你的树莓派的ip地址和端口号访问transmission的web界面了，比如你的树莓派地址是：192.168.1.10，那么在浏览器中输入：<br>192.168.1.10:9091<br>登陆的用户名和密码使用配置文件中设置的内容，例子中的用户名是：transmission，密码是：raspberry。<br>如果遇到permission问题，按照文中的下载地址，使用以下命令提升Downloads目录的权限：<br>sudo chmod 777 -R /home/pi/Downloads/<br>登陆到Web界面之后，点击左上角的文件夹图标可以添加种子文件，树莓派就会开始下载了。</p><p>至此可以一直挂机了</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础教程</title>
      <link href="/zsh.github.io/2020/07/31/test/"/>
      <url>/zsh.github.io/2020/07/31/test/</url>
      
        <content type="html"><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><pre><code class="bash"># h1## h2### h3#### h4##### h5###### h6</code></pre><blockquote><p>这段文字将被高亮显示…</p></blockquote><h2 id="插入链接或图片"><a href="#插入链接或图片" class="headerlink" title="插入链接或图片"></a>插入链接或图片</h2><pre><code>[点击跳转至百度](http://www.baidu.com)![图片](https://upload-images.jianshu.io/upload_images/703764-605e3cc2ecb664f6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/703764-605e3cc2ecb664f6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片"><br>注： 引用图片和链接的唯一区别就是在最前方添加一个感叹号。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown支持有序列表和无序列表两种形式：</p><ul><li>无序列表使用*或+或-标识</li><li>有序列表使用数字加.标识，例如：1.<pre><code>* 黄瓜* 玉米* 茄子</code></pre></li></ul><ul><li>黄瓜</li><li>玉米</li><li>茄子</li></ul><ul><li>黄瓜</li><li>玉米</li><li>茄子</li></ul><ol><li>黄瓜</li><li>玉米</li><li>茄子<pre><code>注：这里比较有趣的地方是，对于有序列表，Markdown将只关注你的第一个项目的数字编号。例如：如果第一个项目编号是3，以此类推，第二个项目应该是4，最终将显示为3、4、5。而如果你指定了第一个编号，后面的编号指定错误也没有关系，Markdown将只在乎你的第一个项目编号。## 使用列表的一些注意事项如果在单一列表项中包含了多个段落，为了保证渲染正常，*与段落首字母之间必须保留四个空格</code></pre></li></ol><ul><li><p>段落一</p><p>小段一</p></li><li><p>段落二</p><p>小段二</p><pre><code>另外，如果在列表中加入了区块引用，区域引用标记符也需要缩进4个空格</code></pre></li><li><p>段落一</p><blockquote><p>区块标记一</p></blockquote></li><li><p>段落二</p><blockquote><p>区块标记二</p></blockquote><pre><code>注：记住一个原则，如果在和列表配合使用的时候出现了问题，就缩进一次，四个空格或者一个制表符代表一次缩进。如果一次缩进没有解决问题，那就两次。## 分隔线有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以</code></pre></li></ul><hr><hr><pre><code>产生分隔线的语法要求比较松，符号之间添加空格也可以。## 强调有时候，我们希望对某一部分文字进行强调，使用*或_包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗</code></pre><p><em>这里是斜体</em><br><em>这里是斜体</em></p><p><strong>这里是加粗</strong><br><strong>这里是加粗</strong></p><pre><code>## 高级用法Markdown在IT圈子里面比较流行的一个重要原因是，它能够轻松漂亮地插入代码。方法是，使用反引号`进行包裹即可。如果是行内代码引用，使用单个反引号进行包裹这是一段var x = 3行内代码如果插入一整段代码，需要至少使用两个以上反引号进行包裹， 看效果：</code></pre><p>fun (x: Int, y: Int): Int &#123;<br>  return x + y<br>&#125;</p><pre><code>注：很多人不知道怎么输入反引号。在英文模式下，找到键盘最左侧esc键下面的第一个键点击即可。## 插入表格表格是Markdown语法中比较复杂的一个，其语法如下：</code></pre><table><thead><tr><th align="center">表头</th><th align="center">条目一</th><th align="center">条目二</th></tr></thead><tbody><tr><td align="center">项目</td><td align="center">项目一</td><td align="center">项目二</td></tr></tbody></table><pre><code>以上标记显示效果如下：表头|条目一|条目二:---:|:---:|:---:项目|项目一|项目二注：三个短斜杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。## 其他Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</code></pre><p>\   反斜线<br>`   反引号</p><ul><li>星号<br>_   底线<br>&#123;&#125;  花括号<br>[]  方括号<br>()  括弧<h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1></li></ul><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   惊叹号<pre><code>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\\ =&gt; \ 。</code></pre></li></ul><p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/zsh.github.io/2020/07/30/hello-world/"/>
      <url>/zsh.github.io/2020/07/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>author: zsh</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
